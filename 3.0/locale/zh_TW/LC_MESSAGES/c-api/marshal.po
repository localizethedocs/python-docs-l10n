# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-10 15:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../c-api/marshal.rst:6
msgid "Data marshalling support"
msgstr ""

#: ../../../c-api/marshal.rst:8
msgid ""
"These routines allow C code to work with serialized objects using the same "
"data format as the :mod:`marshal` module.  There are functions to write data "
"into the serialization format, and additional functions that can be used to "
"read the data back.  Files used to store marshalled data must be opened in "
"binary mode."
msgstr ""

#: ../../../c-api/marshal.rst:13
msgid "Numeric values are stored with the least significant byte first."
msgstr ""

#: ../../../c-api/marshal.rst:15
msgid ""
"The module supports two versions of the data format: version 0 is the "
"historical version, version 1 shares interned strings in the file, and upon "
"unmarshalling. Version 2 uses a binary format for floating point numbers. "
"*Py_MARSHAL_VERSION* indicates the current file format (currently 2)."
msgstr ""

#: ../../../c-api/marshal.rst:40
msgid "The following functions allow marshalled values to be read back in."
msgstr ""

#: ../../../c-api/marshal.rst:42
msgid ""
"XXX What about error detection?  It appears that reading past the end of the "
"file will always result in a negative numeric value (where that's relevant), "
"but it's not clear that negative values won't be handled properly when "
"there's no error.  What's the right way to tell? Should only non-negative "
"values be written using these routines?"
msgstr ""
