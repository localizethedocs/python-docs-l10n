# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 04:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:2
msgid ":mod:`future_builtins` --- Python 3 builtins"
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:8
msgid ""
"This module provides functions that exist in 2.x, but have different "
"behavior in Python 3, so they cannot be put into the 2.x builtins namespace."
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:11
msgid ""
"Instead, if you want to write code compatible with Python 3 builtins, import "
"them from this module, like this::"
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:18
msgid ""
"The :term:`2to3` tool that ports Python 2 code to Python 3 will recognize "
"this usage and leave the new builtins alone."
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:23
msgid ""
"The Python 3 :func:`print` function is already in the builtins, but cannot "
"be accessed from Python 2 code unless you use the appropriate future "
"statement::"
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:29
msgid "Available builtins are:"
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:33
msgid ""
"Returns the same as :func:`repr`.  In Python 3, :func:`repr` will return "
"printable Unicode characters unescaped, while :func:`ascii` will always "
"backslash-escape them.  Using :func:`future_builtins.ascii` instead of :func:"
"`repr` in 2.6 code makes it clear that you need a pure ASCII return value."
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:41
msgid "Works like :func:`itertools.ifilter`."
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:45
msgid ""
"Works like the built-in :func:`hex`, but instead of :meth:`__hex__` it will "
"use the :meth:`__index__` method on its argument to get an integer that is "
"then converted to hexadecimal."
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:51
msgid "Works like :func:`itertools.imap`."
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:55
msgid ""
"In Python 3, :func:`map` does not accept ``None`` for the function argument."
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:60
msgid ""
"Works like the built-in :func:`oct`, but instead of :meth:`__oct__` it will "
"use the :meth:`__index__` method on its argument to get an integer that is "
"then converted to octal."
msgstr ""

#: /home/runner/work/python-docs-l10n/python-docs-l10n/out/repo/Doc/library/future_builtins.rst:66
msgid "Works like :func:`itertools.izip`."
msgstr ""
