# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 04:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../using/scripts.rst:4
msgid "Additional Tools and Scripts"
msgstr ""

#: ../../../using/scripts.rst:9
msgid "pyvenv - Creating virtual environments"
msgstr ""

#: ../../../using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"``pyvenv`` script::"
msgstr ""

#: ../../../using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it "
"with a ``home`` key pointing to the Python installation the command was run "
"from.  It also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory "
"containing a copy of the ``python`` binary (or binaries, in the case of "
"Windows).  It also creates an (initially empty) ``lib/pythonX.Y/site-"
"packages`` subdirectory (on Windows, this is ``Lib\\site-packages``)."
msgstr ""

#: ../../../using/venv-create.inc:16
msgid ""
"On Windows, you may have to invoke the ``pyvenv`` script as follows, if you "
"don't have the relevant PATH and PATHEXT settings::"
msgstr ""

#: ../../../using/venv-create.inc:21
msgid "or equivalently::"
msgstr ""

#: ../../../using/venv-create.inc:25
msgid "The command, if run with ``-h``, will show the available options::"
msgstr ""

#: ../../../using/venv-create.inc:47
msgid ""
"If the target directory already exists an error will be raised, unless the "
"``--clear`` or ``--upgrade`` option was provided."
msgstr ""

#: ../../../using/venv-create.inc:50
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr ""

#: ../../../using/venv-create.inc:54
msgid ""
"Multiple paths can be given to ``pyvenv``, in which case an identical "
"virtualenv will be created, according to the given options, at each provided "
"path."
msgstr ""

#: ../../../using/venv-create.inc:58
msgid ""
"Once a venv has been created, it can be \"activated\" using a script in the "
"venv's binary directory. The invocation of the script is platform-specific: "
"on a Posix platform, you would typically do::"
msgstr ""

#: ../../../using/venv-create.inc:64
msgid "whereas on Windows, you might do::"
msgstr ""

#: ../../../using/venv-create.inc:68
msgid "if you are using the ``cmd.exe`` shell, or perhaps::"
msgstr ""

#: ../../../using/venv-create.inc:72
msgid "if you use PowerShell."
msgstr ""

#: ../../../using/venv-create.inc:74
msgid ""
"You don't specifically *need* to activate an environment; activation just "
"prepends the venv's binary directory to your path, so that \"python\" "
"invokes the venv's Python interpreter and you can run installed scripts "
"without having to use their full path. However, all scripts installed in a "
"venv should be runnable without activating it, and run with the venv's "
"Python automatically."
msgstr ""

#: ../../../using/venv-create.inc:80
msgid ""
"You can deactivate a venv by typing \"deactivate\" in your shell. The exact "
"mechanism is platform-specific: for example, the Bash activation script "
"defines a \"deactivate\" function, whereas on Windows there are separate "
"scripts called ``deactivate.bat`` and ``Deactivate.ps1`` which are installed "
"when the venv is created."
msgstr ""
