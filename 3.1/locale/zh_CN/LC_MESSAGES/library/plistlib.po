# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-10 15:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/plistlib.rst:2
msgid ":mod:`plistlib` --- Generate and parse Mac OS X ``.plist`` files"
msgstr ""

#: ../../../library/plistlib.rst:14
msgid ""
"This module provides an interface for reading and writing the \"property "
"list\" XML files used mainly by Mac OS X."
msgstr ""

#: ../../../library/plistlib.rst:17
msgid ""
"The property list (``.plist``) file format is a simple XML pickle supporting "
"basic object types, like dictionaries, lists, numbers and strings.  Usually "
"the top level object is a dictionary."
msgstr ""

#: ../../../library/plistlib.rst:21
msgid ""
"To write out and to parse a plist file, use the :func:`writePlist` and :func:"
"`readPlist` functions."
msgstr ""

#: ../../../library/plistlib.rst:24
msgid ""
"To work with plist data in bytes objects, use :func:`writePlistToBytes` and :"
"func:`readPlistFromBytes`."
msgstr ""

#: ../../../library/plistlib.rst:27
msgid ""
"Values can be strings, integers, floats, booleans, tuples, lists, "
"dictionaries (but only with string keys), :class:`Data` or :class:`datetime."
"datetime` objects.  String values (including dictionary keys) have to be "
"unicode strings -- they will be written out as UTF-8."
msgstr ""

#: ../../../library/plistlib.rst:32
msgid ""
"The ``<data>`` plist type is supported through the :class:`Data` class.  "
"This is a thin wrapper around a Python bytes object.  Use :class:`Data` if "
"your strings contain control characters."
msgstr ""

#: ../../../library/plistlib.rst:38
msgid ""
"`PList manual page <http://developer.apple.com/documentation/Darwin/"
"Reference/ManPages/man5/plist.5.html>`_"
msgstr ""

#: ../../../library/plistlib.rst:39
msgid "Apple's documentation of the file format."
msgstr ""

#: ../../../library/plistlib.rst:42
msgid "This module defines the following functions:"
msgstr ""

#: ../../../library/plistlib.rst:46
msgid ""
"Read a plist file. *pathOrFile* may either be a file name or a (readable) "
"file object.  Return the unpacked root object (which usually is a "
"dictionary)."
msgstr ""

#: ../../../library/plistlib.rst:50
msgid ""
"The XML data is parsed using the Expat parser from :mod:`xml.parsers.expat` "
"-- see its documentation for possible exceptions on ill-formed XML. Unknown "
"elements will simply be ignored by the plist parser."
msgstr ""

#: ../../../library/plistlib.rst:57
msgid ""
"Write *rootObject* to a plist file. *pathOrFile* may either be a file name "
"or a (writable) file object."
msgstr ""

#: ../../../library/plistlib.rst:60
msgid ""
"A :exc:`TypeError` will be raised if the object is of an unsupported type or "
"a container that contains objects of unsupported types."
msgstr ""

#: ../../../library/plistlib.rst:66
msgid "Read a plist data from a bytes object.  Return the root object."
msgstr ""

#: ../../../library/plistlib.rst:71
msgid "Return *rootObject* as a plist-formatted bytes object."
msgstr ""

#: ../../../library/plistlib.rst:74
msgid "The following class is available:"
msgstr ""

#: ../../../library/plistlib.rst:78
msgid ""
"Return a \"data\" wrapper object around the bytes object *data*.  This is "
"used in functions converting from/to plists to represent the ``<data>`` type "
"available in plists."
msgstr ""

#: ../../../library/plistlib.rst:82
msgid ""
"It has one attribute, :attr:`data`, that can be used to retrieve the Python "
"bytes object stored in it."
msgstr ""

#: ../../../library/plistlib.rst:87
msgid "Examples"
msgstr ""

#: ../../../library/plistlib.rst:89
msgid "Generating a plist::"
msgstr ""

#: ../../../library/plistlib.rst:91
msgid ""
"pl = dict(\n"
"    aString = \"Doodah\",\n"
"    aList = [\"A\", \"B\", 12, 32.1, [1, 2, 3]],\n"
"    aFloat = 0.1,\n"
"    anInt = 728,\n"
"    aDict = dict(\n"
"        anotherString = \"<hello & hi there!>\",\n"
"        aThirdString = \"M\\xe4ssig, Ma\\xdf\",\n"
"        aTrueValue = True,\n"
"        aFalseValue = False,\n"
"    ),\n"
"    someData = Data(b\"<binary gunk>\"),\n"
"    someMoreData = Data(b\"<lots of binary gunk>\" * 10),\n"
"    aDate = datetime.datetime.fromtimestamp(time.mktime(time.gmtime())),\n"
")\n"
"writePlist(pl, fileName)"
msgstr ""

#: ../../../library/plistlib.rst:108
msgid "Parsing a plist::"
msgstr ""

#: ../../../library/plistlib.rst:110
msgid ""
"pl = readPlist(pathOrFile)\n"
"print(pl[\"aKey\"])"
msgstr ""

#: ../../../library/plistlib.rst:10
msgid "plist"
msgstr ""

#: ../../../library/plistlib.rst:10
msgid "file"
msgstr ""

#: ../../../library/plistlib.rst:10
msgid "property list"
msgstr ""
