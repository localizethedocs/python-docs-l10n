# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 04:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/hashlib.rst:3
msgid ":mod:`hashlib` --- Secure hashes and message digests"
msgstr ""

#: ../../../library/hashlib.rst:15
msgid ""
"This module implements a common interface to many different secure hash and "
"message digest algorithms.  Included are the FIPS secure hash algorithms "
"SHA1, SHA224, SHA256, SHA384, and SHA512 (defined in FIPS 180-2) as well as "
"RSA's MD5 algorithm (defined in Internet :rfc:`1321`).  The terms \"secure "
"hash\" and \"message digest\" are interchangeable.  Older algorithms were "
"called message digests.  The modern term is secure hash."
msgstr ""

#: ../../../library/hashlib.rst:23
msgid ""
"If you want the adler32 or crc32 hash functions they are available in the :"
"mod:`zlib` module."
msgstr ""

#: ../../../library/hashlib.rst:28
msgid ""
"Some algorithms have known hash collision weaknesses, see the FAQ at the end."
msgstr ""

#: ../../../library/hashlib.rst:30
msgid ""
"There is one constructor method named for each type of :dfn:`hash`.  All "
"return a hash object with the same simple interface. For example: use :func:"
"`sha1` to create a SHA1 hash object. You can now feed this object with "
"objects conforming to the buffer interface (normally :class:`bytes` objects) "
"using the :meth:`update` method.  At any point you can ask it for the :dfn:"
"`digest` of the concatenation of the data fed to it so far using the :meth:"
"`digest` or :meth:`hexdigest` methods."
msgstr ""

#: ../../../library/hashlib.rst:40
msgid ""
"Feeding string objects is to :meth:`update` is not supported, as hashes work "
"on bytes, not on characters."
msgstr ""

#: ../../../library/hashlib.rst:45
msgid ""
"Constructors for hash algorithms that are always present in this module are :"
"func:`md5`, :func:`sha1`, :func:`sha224`, :func:`sha256`, :func:`sha384`, "
"and :func:`sha512`.  Additional algorithms may also be available depending "
"upon the OpenSSL library that Python uses on your platform."
msgstr ""

#: ../../../library/hashlib.rst:50
msgid ""
"For example, to obtain the digest of the byte string ``b'Nobody inspects the "
"spammish repetition'``::"
msgstr ""

#: ../../../library/hashlib.rst:64
msgid "More condensed:"
msgstr ""

#: ../../../library/hashlib.rst:69
msgid ""
"A generic :func:`new` constructor that takes the string name of the desired "
"algorithm as its first parameter also exists to allow access to the above "
"listed hashes as well as any other algorithms that your OpenSSL library may "
"offer.  The named constructors are much faster than :func:`new` and should "
"be preferred."
msgstr ""

#: ../../../library/hashlib.rst:74
msgid "Using :func:`new` with an algorithm provided by OpenSSL:"
msgstr ""

#: ../../../library/hashlib.rst:81
msgid ""
"The following values are provided as constant attributes of the hash objects "
"returned by the constructors:"
msgstr ""

#: ../../../library/hashlib.rst:87
msgid "The size of the resulting hash in bytes."
msgstr ""

#: ../../../library/hashlib.rst:91
msgid "The internal block size of the hash algorithm in bytes."
msgstr ""

#: ../../../library/hashlib.rst:93
msgid "A hash object has the following methods:"
msgstr ""

#: ../../../library/hashlib.rst:98
msgid ""
"Update the hash object with the object *arg*, which must be interpretable as "
"a buffer of bytes.  Repeated calls are equivalent to a single call with the "
"concatenation of all the arguments: ``m.update(a); m.update(b)`` is "
"equivalent to ``m.update(a+b)``."
msgstr ""

#: ../../../library/hashlib.rst:106
msgid ""
"Return the digest of the data passed to the :meth:`update` method so far. "
"This is a bytes array of size :attr:`digest_size` which may contain bytes in "
"the whole range from 0 to 255."
msgstr ""

#: ../../../library/hashlib.rst:113
msgid ""
"Like :meth:`digest` except the digest is returned as a string object of "
"double length, containing only hexadecimal digits.  This may be used to "
"exchange the value safely in email or other non-binary environments."
msgstr ""

#: ../../../library/hashlib.rst:120
msgid ""
"Return a copy (\"clone\") of the hash object.  This can be used to "
"efficiently compute the digests of data sharing a common initial substring."
msgstr ""

#: ../../../library/hashlib.rst:127
msgid "Module :mod:`hmac`"
msgstr ""

#: ../../../library/hashlib.rst:127
msgid "A module to generate message authentication codes using hashes."
msgstr ""

#: ../../../library/hashlib.rst:130
msgid "Module :mod:`base64`"
msgstr ""

#: ../../../library/hashlib.rst:130
msgid "Another way to encode binary hashes for non-binary environments."
msgstr ""

#: ../../../library/hashlib.rst:133
msgid "http://csrc.nist.gov/publications/fips/fips180-2/fips180-2.pdf"
msgstr ""

#: ../../../library/hashlib.rst:133
msgid "The FIPS 180-2 publication on Secure Hash Algorithms."
msgstr ""

#: ../../../library/hashlib.rst:136
msgid "http://www.cryptography.com/cnews/hash.html"
msgstr ""

#: ../../../library/hashlib.rst:136
msgid ""
"Hash Collision FAQ with information on which algorithms have known issues "
"and what that means regarding their use."
msgstr ""

#: ../../../library/hashlib.rst:11
msgid "message digest, MD5"
msgstr ""

#: ../../../library/hashlib.rst:11
msgid "secure hash algorithm, SHA1, SHA224, SHA256, SHA384, SHA512"
msgstr ""

#: ../../../library/hashlib.rst:43
msgid "OpenSSL"
msgstr ""

#: ../../../library/hashlib.rst:43
msgid "(use in module hashlib)"
msgstr ""
