# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 04:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/cmath.rst:3
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ""

#: ../../../library/cmath.rst:9
msgid ""
"This module is always available.  It provides access to mathematical "
"functions for complex numbers.  The functions in this module accept "
"integers, floating-point numbers or complex numbers as arguments. They will "
"also accept any Python object that has either a :meth:`__complex__` or a :"
"meth:`__float__` method: these methods are used to convert the object to a "
"complex or floating-point number, respectively, and the function is then "
"applied to the result of the conversion."
msgstr ""

#: ../../../library/cmath.rst:19
msgid ""
"On platforms with hardware and system-level support for signed zeros, "
"functions involving branch cuts are continuous on *both* sides of the branch "
"cut: the sign of the zero distinguishes one side of the branch cut from the "
"other.  On platforms that do not support signed zeros the continuity is as "
"specified below."
msgstr ""

#: ../../../library/cmath.rst:27
msgid "Complex coordinates"
msgstr ""

#: ../../../library/cmath.rst:29
msgid ""
"Complex numbers can be expressed by two important coordinate systems. "
"Python's :class:`complex` type uses rectangular coordinates where a number "
"on the complex plain is defined by two floats, the real part and the "
"imaginary part."
msgstr ""

#: ../../../library/cmath.rst:34 ../../../library/cmath.rst:54
msgid "Definition::"
msgstr ""

#: ../../../library/cmath.rst:41
msgid ""
"In engineering the polar coordinate system is popular for complex numbers. "
"In polar coordinates a complex number is defined by the radius *r* and the "
"phase angle *phi*. The radius *r* is the absolute value of the complex, "
"which can be viewed as distance from (0, 0). The radius *r* is always 0 or a "
"positive float. The phase angle *phi* is the counter clockwise angle from "
"the positive x axis, e.g. *1* has the angle *0*, *1j* has the angle *π/2* "
"and *-1* the angle *-π*."
msgstr ""

#: ../../../library/cmath.rst:49
msgid ""
"While :func:`phase` and func:`polar` return *+π* for a negative real they "
"may return *-π* for a complex with a very small negative imaginary part, e."
"g. *-1-1E-300j*."
msgstr ""

#: ../../../library/cmath.rst:66
msgid "Return phase, also known as the argument, of a complex."
msgstr ""

#: ../../../library/cmath.rst:71
msgid ""
"Convert a :class:`complex` from rectangular coordinates to polar "
"coordinates. The function returns a tuple with the two elements *r* and "
"*phi*. *r* is the distance from 0 and *phi* the phase angle."
msgstr ""

#: ../../../library/cmath.rst:79
msgid ""
"Convert from polar coordinates to rectangular coordinates and return a :"
"class:`complex`."
msgstr ""

#: ../../../library/cmath.rst:85
msgid "cmath functions"
msgstr ""

#: ../../../library/cmath.rst:89
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞, continuous from below. The other extends "
"left from -1 along the real axis to -∞, continuous from above."
msgstr ""

#: ../../../library/cmath.rst:96
msgid ""
"Return the hyperbolic arc cosine of *x*. There is one branch cut, extending "
"left from 1 along the real axis to -∞, continuous from above."
msgstr ""

#: ../../../library/cmath.rst:102
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr ""

#: ../../../library/cmath.rst:107
msgid ""
"Return the hyperbolic arc sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``, continuous from the "
"right.  The other extends from ``-1j`` along the imaginary axis to ``-∞j``, "
"continuous from the left."
msgstr ""

#: ../../../library/cmath.rst:115
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``, continuous from the right. The "
"other extends from ``-1j`` along the imaginary axis to ``-∞j``, continuous "
"from the left."
msgstr ""

#: ../../../library/cmath.rst:123
msgid ""
"Return the hyperbolic arc tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``, continuous from below. The "
"other extends from ``-1`` along the real axis to ``-∞``, continuous from "
"above."
msgstr ""

#: ../../../library/cmath.rst:131
msgid "Return the cosine of *x*."
msgstr ""

#: ../../../library/cmath.rst:136
msgid "Return the hyperbolic cosine of *x*."
msgstr ""

#: ../../../library/cmath.rst:141
msgid "Return the exponential value ``e**x``."
msgstr ""

#: ../../../library/cmath.rst:146
msgid ""
"Return *True* if the real or the imaginary part of x is positive or negative "
"infinity."
msgstr ""

#: ../../../library/cmath.rst:152
msgid "Return *True* if the real or imaginary part of x is not a number (NaN)."
msgstr ""

#: ../../../library/cmath.rst:157
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞, continuous from above."
msgstr ""

#: ../../../library/cmath.rst:164
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr ""

#: ../../../library/cmath.rst:170
msgid "Return the sine of *x*."
msgstr ""

#: ../../../library/cmath.rst:175
msgid "Return the hyperbolic sine of *x*."
msgstr ""

#: ../../../library/cmath.rst:180
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr ""

#: ../../../library/cmath.rst:185
msgid "Return the tangent of *x*."
msgstr ""

#: ../../../library/cmath.rst:190
msgid "Return the hyperbolic tangent of *x*."
msgstr ""

#: ../../../library/cmath.rst:192
msgid "The module also defines two mathematical constants:"
msgstr ""

#: ../../../library/cmath.rst:197
msgid "The mathematical constant *pi*, as a float."
msgstr ""

#: ../../../library/cmath.rst:202
msgid "The mathematical constant *e*, as a float."
msgstr ""

#: ../../../library/cmath.rst:206
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""

#: ../../../library/cmath.rst:214
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""

#: ../../../library/cmath.rst:224
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165-211."
msgstr ""

#: ../../../library/cmath.rst:204
msgid "math"
msgstr ""
