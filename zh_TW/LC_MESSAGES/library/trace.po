# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 04:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/trace.rst:3
msgid ":mod:`trace` --- Trace or track Python statement execution"
msgstr ""

#: ../../../library/trace.rst:9
msgid ""
"The :mod:`trace` module allows you to trace program execution, generate "
"annotated statement coverage listings, print caller/callee relationships and "
"list functions executed during a program run.  It can be used in another "
"program or from the command line."
msgstr ""

#: ../../../library/trace.rst:18
msgid "Command Line Usage"
msgstr ""

#: ../../../library/trace.rst:20
msgid ""
"The :mod:`trace` module can be invoked from the command line.  It can be as "
"simple as ::"
msgstr ""

#: ../../../library/trace.rst:25
msgid ""
"The above will generate annotated listings of all Python modules imported "
"during the execution of :file:`somefile.py`."
msgstr ""

#: ../../../library/trace.rst:28
msgid "The following command-line arguments are supported:"
msgstr ""

#: ../../../library/trace.rst:31
msgid ":option:`--trace`, :option:`-t`"
msgstr ""

#: ../../../library/trace.rst:31
msgid "Display lines as they are executed."
msgstr ""

#: ../../../library/trace.rst:35
msgid ":option:`--count`, :option:`-c`"
msgstr ""

#: ../../../library/trace.rst:34
msgid ""
"Produce a set of  annotated listing files upon program completion that shows "
"how many times each statement was executed."
msgstr ""

#: ../../../library/trace.rst:39
msgid ":option:`--report`, :option:`-r`"
msgstr ""

#: ../../../library/trace.rst:38
msgid ""
"Produce an annotated list from an earlier program run that used the :option:"
"`--count` and :option:`--file` arguments."
msgstr ""

#: ../../../library/trace.rst:44
msgid ":option:`--no-report`, :option:`-R`"
msgstr ""

#: ../../../library/trace.rst:42
msgid ""
"Do not generate annotated listings.  This is useful if you intend to make "
"several runs with :option:`--count` then produce a single set of annotated "
"listings at the end."
msgstr ""

#: ../../../library/trace.rst:47
msgid ":option:`--listfuncs`, :option:`-l`"
msgstr ""

#: ../../../library/trace.rst:47
msgid "List the functions executed by running the program."
msgstr ""

#: ../../../library/trace.rst:50
msgid ":option:`--trackcalls`, :option:`-T`"
msgstr ""

#: ../../../library/trace.rst:50
msgid "Generate calling relationships exposed by running the program."
msgstr ""

#: ../../../library/trace.rst:53
msgid ":option:`--file`, :option:`-f`"
msgstr ""

#: ../../../library/trace.rst:53
msgid "Name a file containing (or to contain) counts."
msgstr ""

#: ../../../library/trace.rst:56
msgid ":option:`--coverdir`, :option:`-C`"
msgstr ""

#: ../../../library/trace.rst:56
msgid "Name a directory in which to save annotated listing files."
msgstr ""

#: ../../../library/trace.rst:60
msgid ":option:`--missing`, :option:`-m`"
msgstr ""

#: ../../../library/trace.rst:59
msgid ""
"When generating annotated listings, mark lines which were not executed with "
"'``>>>>>>``'."
msgstr ""

#: ../../../library/trace.rst:64
msgid ":option:`--summary`, :option:`-s`"
msgstr ""

#: ../../../library/trace.rst:63
msgid ""
"When using :option:`--count` or :option:`--report`, write a brief summary to "
"stdout for each file processed."
msgstr ""

#: ../../../library/trace.rst:69
msgid ":option:`--ignore-module`"
msgstr ""

#: ../../../library/trace.rst:67
msgid ""
"Accepts comma separated list of module names. Ignore each of the named "
"module and its submodules (if it is a package).  May be given multiple times."
msgstr ""

#: ../../../library/trace.rst:75
msgid ":option:`--ignore-dir`"
msgstr ""

#: ../../../library/trace.rst:72
msgid ""
"Ignore all modules and packages in the named directory and subdirectories "
"(multiple directories can be joined by os.pathsep).  May be given multiple "
"times."
msgstr ""

#: ../../../library/trace.rst:80
msgid "Programming Interface"
msgstr ""

#: ../../../library/trace.rst:85
msgid ""
"Create an object to trace execution of a single statement or expression. All "
"parameters are optional.  *count* enables counting of line numbers. *trace* "
"enables line execution tracing.  *countfuncs* enables listing of the "
"functions called during the run.  *countcallers* enables call relationship "
"tracking. *ignoremods* is a list of modules or packages to ignore.  "
"*ignoredirs* is a list of directories whose modules or packages should be "
"ignored.  *infile* is the file from which to read stored count information.  "
"*outfile* is a file in which to write updated count information. *timing* "
"enables a timestamp relative to when tracing was started to be displayed."
msgstr ""

#: ../../../library/trace.rst:98
msgid ""
"Run *cmd* under control of the Trace object with the current tracing "
"parameters."
msgstr ""

#: ../../../library/trace.rst:103
msgid ""
"Run *cmd* under control of the Trace object with the current tracing "
"parameters in the defined global and local environments.  If not defined, "
"*globals* and *locals* default to empty dictionaries."
msgstr ""

#: ../../../library/trace.rst:110
msgid ""
"Call *func* with the given arguments under control of the :class:`Trace` "
"object with the current tracing parameters."
msgstr ""

#: ../../../library/trace.rst:113
msgid "This is a simple example showing the use of this module::"
msgstr ""
