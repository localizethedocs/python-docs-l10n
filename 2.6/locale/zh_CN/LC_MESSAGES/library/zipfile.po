# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-10 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/zipfile.rst:3
msgid ":mod:`zipfile` --- Work with ZIP archives"
msgstr ""

#: ../../../library/zipfile.rst:12
msgid ""
"The ZIP file format is a common archive and compression standard. This "
"module provides tools to create, read, write, append, and list a ZIP file.  "
"Any advanced use of this module will require an understanding of the format, "
"as defined in `PKZIP Application Note <http://www.pkware.com/documents/"
"casestudies/APPNOTE.TXT>`_."
msgstr ""

#: ../../../library/zipfile.rst:18
msgid ""
"This module does not currently handle multi-disk ZIP files. It can handle "
"ZIP files that use the ZIP64 extensions (that is ZIP files that are more "
"than 4 GByte in size).  It supports decryption of encrypted files in ZIP "
"archives, but it currently cannot create an encrypted file.  Decryption is "
"extremely slow as it is implemented in native Python rather than C."
msgstr ""

#: ../../../library/zipfile.rst:25
msgid ""
"For other archive formats, see the :mod:`bz2`, :mod:`gzip`, and :mod:"
"`tarfile` modules."
msgstr ""

#: ../../../library/zipfile.rst:28
msgid "The module defines the following items:"
msgstr ""

#: ../../../library/zipfile.rst:32
msgid "The error raised for bad ZIP files (old name: ``zipfile.error``)."
msgstr ""

#: ../../../library/zipfile.rst:37
msgid ""
"The error raised when a ZIP file would require ZIP64 functionality but that "
"has not been enabled."
msgstr ""

#: ../../../library/zipfile.rst:43
msgid ""
"The class for reading and writing ZIP files.  See section :ref:`zipfile-"
"objects` for constructor details."
msgstr ""

#: ../../../library/zipfile.rst:49
msgid "Class for creating ZIP archives containing Python libraries."
msgstr ""

#: ../../../library/zipfile.rst:54
msgid ""
"Class used to represent information about a member of an archive. Instances "
"of this class are returned by the :meth:`getinfo` and :meth:`infolist` "
"methods of :class:`ZipFile` objects.  Most users of the :mod:`zipfile` "
"module will not need to create these, but only use those created by this "
"module. *filename* should be the full name of the archive member, and "
"*date_time* should be a tuple containing six fields which describe the time "
"of the last modification to the file; the fields are described in section :"
"ref:`zipinfo-objects`."
msgstr ""

#: ../../../library/zipfile.rst:66
msgid ""
"Returns ``True`` if *filename* is a valid ZIP file based on its magic "
"number, otherwise returns ``False``."
msgstr ""

#: ../../../library/zipfile.rst:72
msgid "The numeric constant for an uncompressed archive member."
msgstr ""

#: ../../../library/zipfile.rst:77
msgid ""
"The numeric constant for the usual ZIP compression method.  This requires "
"the zlib module.  No other compression methods are currently supported."
msgstr ""

#: ../../../library/zipfile.rst:85
msgid ""
"`PKZIP Application Note <http://www.pkware.com/documents/casestudies/APPNOTE."
"TXT>`_"
msgstr ""

#: ../../../library/zipfile.rst:84
msgid ""
"Documentation on the ZIP file format by Phil Katz, the creator of the format "
"and algorithms used."
msgstr ""

#: ../../../library/zipfile.rst:88
msgid "`Info-ZIP Home Page <http://www.info-zip.org/>`_"
msgstr ""

#: ../../../library/zipfile.rst:88
msgid ""
"Information about the Info-ZIP project's ZIP archive programs and "
"development libraries."
msgstr ""

#: ../../../library/zipfile.rst:95
msgid "ZipFile Objects"
msgstr ""

#: ../../../library/zipfile.rst:100
msgid ""
"Open a ZIP file, where *file* can be either a path to a file (a string) or a "
"file-like object.  The *mode* parameter should be ``'r'`` to read an "
"existing file, ``'w'`` to truncate and write a new file, or ``'a'`` to "
"append to an existing file.  If *mode* is ``'a'`` and *file* refers to an "
"existing ZIP file, then additional files are added to it.  If *file* does "
"not refer to a ZIP file, then a new ZIP archive is appended to the file.  "
"This is meant for adding a ZIP archive to another file, such as :file:"
"`python.exe`.  Using ::"
msgstr ""

#: ../../../library/zipfile.rst:108
msgid "cat myzip.zip >> python.exe"
msgstr ""

#: ../../../library/zipfile.rst:110
msgid ""
"also works, and at least :program:`WinZip` can read such files. If *mode* is "
"``a`` and the file does not exist at all, it is created. *compression* is "
"the ZIP compression method to use when writing the archive, and should be :"
"const:`ZIP_STORED` or :const:`ZIP_DEFLATED`; unrecognized values will cause :"
"exc:`RuntimeError` to be raised.  If :const:`ZIP_DEFLATED` is specified but "
"the :mod:`zlib` module is not available, :exc:`RuntimeError` is also "
"raised.  The default is :const:`ZIP_STORED`.  If *allowZip64* is ``True`` "
"zipfile will create ZIP files that use the ZIP64 extensions when the zipfile "
"is larger than 2 GB. If it is  false (the default) :mod:`zipfile` will raise "
"an exception when the ZIP file would require ZIP64 extensions. ZIP64 "
"extensions are disabled by default because the default :program:`zip` and :"
"program:`unzip` commands on Unix (the InfoZIP utilities) don't support these "
"extensions."
msgstr ""

#: ../../../library/zipfile.rst:123
msgid "If the file does not exist, it is created if the mode is 'a'."
msgstr ""

#: ../../../library/zipfile.rst:129
msgid ""
"Close the archive file.  You must call :meth:`close` before exiting your "
"program or essential records will not be written."
msgstr ""

#: ../../../library/zipfile.rst:135
msgid ""
"Return a :class:`ZipInfo` object with information about the archive member "
"*name*.  Calling :meth:`getinfo` for a name not currently contained in the "
"archive will raise a :exc:`KeyError`."
msgstr ""

#: ../../../library/zipfile.rst:142
msgid ""
"Return a list containing a :class:`ZipInfo` object for each member of the "
"archive.  The objects are in the same order as their entries in the actual "
"ZIP file on disk if an existing archive was opened."
msgstr ""

#: ../../../library/zipfile.rst:149
msgid "Return a list of archive members by name."
msgstr ""

#: ../../../library/zipfile.rst:154
msgid ""
"Extract a member from the archive as a file-like object (ZipExtFile). *name* "
"is the name of the file in the archive, or a :class:`ZipInfo` object. The "
"*mode* parameter, if included, must be one of the following: ``'r'`` (the  "
"default), ``'U'``, or ``'rU'``. Choosing ``'U'`` or  ``'rU'`` will enable "
"universal newline support in the read-only object. *pwd* is the password "
"used for encrypted files. Calling  :meth:`open` on a closed ZipFile will "
"raise a  :exc:`RuntimeError`."
msgstr ""

#: ../../../library/zipfile.rst:163
msgid ""
"The file-like object is read-only and provides the following methods: :meth:"
"`read`, :meth:`readline`, :meth:`readlines`, :meth:`__iter__`, :meth:`next`."
msgstr ""

#: ../../../library/zipfile.rst:169
msgid ""
"If the ZipFile was created by passing in a file-like object as the  first "
"argument to the constructor, then the object returned by :meth:`.open` "
"shares the ZipFile's file pointer.  Under these  circumstances, the object "
"returned by :meth:`.open` should not  be used after any additional "
"operations are performed on the  ZipFile object.  If the ZipFile was created "
"by passing in a string (the filename) as the first argument to the "
"constructor, then  :meth:`.open` will create a new file object that will be "
"held by the ZipExtFile, allowing it to operate independently of the  ZipFile."
msgstr ""

#: ../../../library/zipfile.rst:180
msgid ""
"The :meth:`open`, :meth:`read` and :meth:`extract` methods can take a "
"filename or a :class:`ZipInfo` object.  You will appreciate this when trying "
"to read a ZIP file that contains members with duplicate names."
msgstr ""

#: ../../../library/zipfile.rst:189
msgid ""
"Extract a member from the archive to the current working directory; *member* "
"must be its full name or a :class:`ZipInfo` object).  Its file information "
"is extracted as accurately as possible.  *path* specifies a different "
"directory to extract to.  *member* can be a filename or a :class:`ZipInfo` "
"object. *pwd* is the password used for encrypted files."
msgstr ""

#: ../../../library/zipfile.rst:200
msgid ""
"Extract all members from the archive to the current working directory.  "
"*path* specifies a different directory to extract to.  *members* is optional "
"and must be a subset of the list returned by :meth:`namelist`.  *pwd* is the "
"password used for encrypted files."
msgstr ""

#: ../../../library/zipfile.rst:207
msgid ""
"Never extract archives from untrusted sources without prior inspection. It "
"is possible that files are created outside of *path*, e.g. members that have "
"absolute filenames starting with ``\"/\"`` or filenames with two dots ``\".."
"\"``."
msgstr ""

#: ../../../library/zipfile.rst:217
msgid "Print a table of contents for the archive to ``sys.stdout``."
msgstr ""

#: ../../../library/zipfile.rst:222
msgid "Set *pwd* as default password to extract encrypted files."
msgstr ""

#: ../../../library/zipfile.rst:229
msgid ""
"Return the bytes of the file *name* in the archive.  *name* is the name of "
"the file in the archive, or a :class:`ZipInfo` object.  The archive must be "
"open for read or append. *pwd* is the password used for encrypted  files "
"and, if specified, it will override the default password set with :meth:"
"`setpassword`.  Calling :meth:`read` on a closed ZipFile  will raise a :exc:"
"`RuntimeError`."
msgstr ""

#: ../../../library/zipfile.rst:235
msgid "*pwd* was added, and *name* can now be a :class:`ZipInfo` object."
msgstr ""

#: ../../../library/zipfile.rst:241
msgid ""
"Read all the files in the archive and check their CRC's and file headers. "
"Return the name of the first bad file, or else return ``None``. Calling :"
"meth:`testzip` on a closed ZipFile will raise a :exc:`RuntimeError`."
msgstr ""

#: ../../../library/zipfile.rst:248
msgid ""
"Write the file named *filename* to the archive, giving it the archive name "
"*arcname* (by default, this will be the same as *filename*, but without a "
"drive letter and with leading path separators removed).  If given, "
"*compress_type* overrides the value given for the *compression* parameter to "
"the constructor for the new entry.  The archive must be open with mode "
"``'w'`` or ``'a'`` -- calling :meth:`write` on a ZipFile created with mode "
"``'r'`` will raise a :exc:`RuntimeError`.  Calling  :meth:`write` on a "
"closed ZipFile will raise a :exc:`RuntimeError`."
msgstr ""

#: ../../../library/zipfile.rst:259
msgid ""
"There is no official file name encoding for ZIP files. If you have unicode "
"file names, you must convert them to byte strings in your desired encoding "
"before passing them to :meth:`write`. WinZip interprets all file names as "
"encoded in CP437, also known as DOS Latin."
msgstr ""

#: ../../../library/zipfile.rst:266
msgid ""
"Archive names should be relative to the archive root, that is, they should "
"not start with a path separator."
msgstr ""

#: ../../../library/zipfile.rst:271
msgid ""
"If ``arcname`` (or ``filename``, if ``arcname`` is  not given) contains a "
"null byte, the name of the file in the archive will be truncated at the null "
"byte."
msgstr ""

#: ../../../library/zipfile.rst:277
msgid ""
"Write the string *bytes* to the archive; *zinfo_or_arcname* is either the "
"file name it will be given in the archive, or a :class:`ZipInfo` instance.  "
"If it's an instance, at least the filename, date, and time must be given.  "
"If it's a name, the date and time is set to the current date and time. The "
"archive must be opened with mode ``'w'`` or ``'a'`` -- calling  :meth:"
"`writestr` on a ZipFile created with mode ``'r'``  will raise a :exc:"
"`RuntimeError`.  Calling :meth:`writestr` on a closed ZipFile will raise a :"
"exc:`RuntimeError`."
msgstr ""

#: ../../../library/zipfile.rst:287
msgid ""
"When passing a :class:`ZipInfo` instance as the *zinfo_or_acrname* "
"parameter, the compression method used will be that specified in the "
"*compress_type* member of the given :class:`ZipInfo` instance.  By default, "
"the :class:`ZipInfo` constructor sets this member to :const:`ZIP_STORED`."
msgstr ""

#: ../../../library/zipfile.rst:292
msgid "The following data attributes are also available:"
msgstr ""

#: ../../../library/zipfile.rst:297
msgid ""
"The level of debug output to use.  This may be set from ``0`` (the default, "
"no output) to ``3`` (the most output).  Debugging information is written to "
"``sys.stdout``."
msgstr ""

#: ../../../library/zipfile.rst:303
msgid ""
"The comment text associated with the ZIP file.  If assigning a comment to a :"
"class:`ZipFile` instance created with mode 'a' or 'w', this should be a "
"string no longer than 65535 bytes.  Comments longer than this will be "
"truncated in the written archive when :meth:`ZipFile.close` is called."
msgstr ""

#: ../../../library/zipfile.rst:311
msgid "PyZipFile Objects"
msgstr ""

#: ../../../library/zipfile.rst:313
msgid ""
"The :class:`PyZipFile` constructor takes the same parameters as the :class:"
"`ZipFile` constructor.  Instances have one method in addition to those of :"
"class:`ZipFile` objects."
msgstr ""

#: ../../../library/zipfile.rst:320
msgid ""
"Search for files :file:`\\*.py` and add the corresponding file to the "
"archive. The corresponding file is a :file:`\\*.pyo` file if available, else "
"a :file:`\\*.pyc` file, compiling if necessary.  If the pathname is a file, "
"the filename must end with :file:`.py`, and just the (corresponding :file:"
"`\\*.py[co]`) file is added at the top level (no path information).  If the "
"pathname is a file that does not end with :file:`.py`, a :exc:`RuntimeError` "
"will be raised.  If it is a directory, and the directory is not a package "
"directory, then all the files :file:`\\*.py[co]` are added at the top "
"level.  If the directory is a package directory, then all :file:`\\*.py[co]` "
"are added under the package name as a file path, and if any subdirectories "
"are package directories, all of these are added recursively.  *basename* is "
"intended for internal use only.  The :meth:`writepy` method makes archives "
"with file names like this::"
msgstr ""

#: ../../../library/zipfile.rst:334
msgid ""
"string.pyc                                # Top level name\n"
"test/__init__.pyc                         # Package directory\n"
"test/test_support.pyc                          # Module test.test_support\n"
"test/bogus/__init__.pyc                   # Subpackage directory\n"
"test/bogus/myfile.pyc                     # Submodule test.bogus.myfile"
msgstr ""

#: ../../../library/zipfile.rst:344
msgid "ZipInfo Objects"
msgstr ""

#: ../../../library/zipfile.rst:346
msgid ""
"Instances of the :class:`ZipInfo` class are returned by the :meth:`getinfo` "
"and :meth:`infolist` methods of :class:`ZipFile` objects.  Each object "
"stores information about a single member of the ZIP archive."
msgstr ""

#: ../../../library/zipfile.rst:350
msgid "Instances have the following attributes:"
msgstr ""

#: ../../../library/zipfile.rst:355
msgid "Name of the file in the archive."
msgstr ""

#: ../../../library/zipfile.rst:360
msgid ""
"The time and date of the last modification to the archive member.  This is a "
"tuple of six values:"
msgstr ""

#: ../../../library/zipfile.rst:364
msgid "Index"
msgstr ""

#: ../../../library/zipfile.rst:364
msgid "Value"
msgstr ""

#: ../../../library/zipfile.rst:366
msgid "``0``"
msgstr ""

#: ../../../library/zipfile.rst:366
msgid "Year"
msgstr ""

#: ../../../library/zipfile.rst:368
msgid "``1``"
msgstr ""

#: ../../../library/zipfile.rst:368
msgid "Month (one-based)"
msgstr ""

#: ../../../library/zipfile.rst:370
msgid "``2``"
msgstr ""

#: ../../../library/zipfile.rst:370
msgid "Day of month (one-based)"
msgstr ""

#: ../../../library/zipfile.rst:372
msgid "``3``"
msgstr ""

#: ../../../library/zipfile.rst:372
msgid "Hours (zero-based)"
msgstr ""

#: ../../../library/zipfile.rst:374
msgid "``4``"
msgstr ""

#: ../../../library/zipfile.rst:374
msgid "Minutes (zero-based)"
msgstr ""

#: ../../../library/zipfile.rst:376
msgid "``5``"
msgstr ""

#: ../../../library/zipfile.rst:376
msgid "Seconds (zero-based)"
msgstr ""

#: ../../../library/zipfile.rst:382
msgid "Type of compression for the archive member."
msgstr ""

#: ../../../library/zipfile.rst:387
msgid "Comment for the individual archive member."
msgstr ""

#: ../../../library/zipfile.rst:392
msgid ""
"Expansion field data.  The `PKZIP Application Note <http://www.pkware.com/"
"documents/casestudies/APPNOTE.TXT>`_ contains some comments on the internal "
"structure of the data contained in this string."
msgstr ""

#: ../../../library/zipfile.rst:399
msgid "System which created ZIP archive."
msgstr ""

#: ../../../library/zipfile.rst:404
msgid "PKZIP version which created ZIP archive."
msgstr ""

#: ../../../library/zipfile.rst:409
msgid "PKZIP version needed to extract archive."
msgstr ""

#: ../../../library/zipfile.rst:414
msgid "Must be zero."
msgstr ""

#: ../../../library/zipfile.rst:419
msgid "ZIP flag bits."
msgstr ""

#: ../../../library/zipfile.rst:424
msgid "Volume number of file header."
msgstr ""

#: ../../../library/zipfile.rst:429
msgid "Internal attributes."
msgstr ""

#: ../../../library/zipfile.rst:434
msgid "External file attributes."
msgstr ""

#: ../../../library/zipfile.rst:439
msgid "Byte offset to the file header."
msgstr ""

#: ../../../library/zipfile.rst:444
msgid "CRC-32 of the uncompressed file."
msgstr ""

#: ../../../library/zipfile.rst:449
msgid "Size of the compressed data."
msgstr ""

#: ../../../library/zipfile.rst:454
msgid "Size of the uncompressed file."
msgstr ""
