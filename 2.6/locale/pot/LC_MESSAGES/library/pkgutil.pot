# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 04:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/pkgutil.rst:3
msgid ":mod:`pkgutil` --- Package extension utility"
msgstr ""

#: ../../../library/pkgutil.rst:11
msgid "This module provides functions to manipulate packages:"
msgstr ""

#: ../../../library/pkgutil.rst:16
msgid ""
"Extend the search path for the modules which comprise a package. Intended "
"use is to place the following code in a package's :file:`__init__.py`::"
msgstr ""

#: ../../../library/pkgutil.rst:22
msgid ""
"This will add to the package's ``__path__`` all subdirectories of "
"directories on ``sys.path`` named after the package.  This is useful if one "
"wants to distribute different parts of a single logical package as multiple "
"directories."
msgstr ""

#: ../../../library/pkgutil.rst:26
msgid ""
"It also looks for :file:`\\*.pkg` files beginning where ``*`` matches the "
"*name* argument.  This feature is similar to :file:`\\*.pth` files (see the :"
"mod:`site` module for more information), except that it doesn't special-case "
"lines starting with ``import``.  A :file:`\\*.pkg` file is trusted at face "
"value: apart from checking for duplicates, all entries found in a :file:`\\*."
"pkg` file are added to the path, regardless of whether they exist on the "
"filesystem.  (This is a feature.)"
msgstr ""

#: ../../../library/pkgutil.rst:34
msgid ""
"If the input path is not a list (as is the case for frozen packages) it is "
"returned unchanged.  The input path is not modified; an extended copy is "
"returned.  Items are only appended to the copy at the end."
msgstr ""

#: ../../../library/pkgutil.rst:38
msgid ""
"It is assumed that ``sys.path`` is a sequence.  Items of ``sys.path`` that "
"are not (Unicode or 8-bit) strings referring to existing directories are "
"ignored. Unicode items on ``sys.path`` that cause errors when used as "
"filenames may cause this function to raise an exception (in line with :func:"
"`os.path.isdir` behavior)."
msgstr ""

#: ../../../library/pkgutil.rst:46
msgid "Get a resource from a package."
msgstr ""

#: ../../../library/pkgutil.rst:48
msgid ""
"This is a wrapper for the :pep:`302` loader :func:`get_data` API. The "
"package argument should be the name of a package, in standard module format "
"(foo.bar). The resource argument should be in the form of a relative "
"filename, using ``/`` as the path separator. The parent directory name ``.."
"`` is not allowed, and nor is a rooted name (starting with a ``/``)."
msgstr ""

#: ../../../library/pkgutil.rst:54
msgid ""
"The function returns a binary string that is the contents of the specified "
"resource."
msgstr ""

#: ../../../library/pkgutil.rst:57
msgid ""
"For packages located in the filesystem, which have already been imported, "
"this is the rough equivalent of::"
msgstr ""

#: ../../../library/pkgutil.rst:63
msgid ""
"If the package cannot be located or loaded, or it uses a :pep:`302` loader "
"which does not support :func:`get_data`, then None is returned."
msgstr ""
