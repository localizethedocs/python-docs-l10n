# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.15\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-10 15:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../c-api/lifecycle.rst:6
msgid "Object Life Cycle"
msgstr ""

#: ../../../c-api/lifecycle.rst:8
msgid ""
"This section explains how a type's slots relate to each other throughout the "
"life of an object.  It is not intended to be a complete canonical reference "
"for the slots; instead, refer to the slot-specific documentation in :ref:"
"`type-structs` for details about a particular slot."
msgstr ""

#: ../../../c-api/lifecycle.rst:15
msgid "Life Events"
msgstr ""

#: ../../../c-api/lifecycle.rst:17
msgid ""
"The figure below illustrates the order of events that can occur throughout "
"an object's life.  An arrow from *A* to *B* indicates that event *B* can "
"occur after event *A* has occurred, with the arrow's label indicating the "
"condition that must be true for *B* to occur after *A*."
msgstr ""

#: ../../../c-api/lifecycle.rst:24
msgid "<style type=\"text/css\">"
msgstr ""

#: ../../../c-api/lifecycle.rst:28
msgid ""
"#life_events_graph {\n"
"  --svg-fgcolor: currentcolor;\n"
"  --svg-bgcolor: transparent;\n"
"}\n"
"#life_events_graph a {\n"
"  color: inherit;\n"
"}\n"
"#life_events_graph [stroke=\"black\"] {\n"
"  stroke: var(--svg-fgcolor);\n"
"}\n"
"#life_events_graph text,\n"
"#life_events_graph [fill=\"black\"] {\n"
"  fill: var(--svg-fgcolor);\n"
"}\n"
"#life_events_graph [fill=\"white\"] {\n"
"  fill: var(--svg-bgcolor);\n"
"}\n"
"#life_events_graph [fill=\"none\"] {\n"
"  /* On links, setting fill will make the entire shape clickable */\n"
"  fill: var(--svg-bgcolor);\n"
"}\n"
msgstr ""

#: ../../../c-api/lifecycle.rst:31
msgid "</style>"
msgstr ""

#: ../../../c-api/lifecycle.rst:35
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n"
"<?xml-stylesheet href=\"lifecycle.dot.css\" type=\"text/css\"?>\n"
"<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n"
" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n"
"<!-- Generated by graphviz version 12.2.0 (0)\n"
" -->\n"
"<!-- Title: Life Events Pages: 1 -->\n"
"<svg width=\"465pt\" height=\"845pt\"\n"
" viewBox=\"0.00 0.00 465.30 845.00\" xmlns=\"http://www.w3.org/2000/svg\" "
"xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n"
"<g id=\"life_events_graph\" class=\"graph\" transform=\"scale(1 1) rotate(0) "
"translate(4 841)\">\n"
"<title>Life Events</title>\n"
"<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-841 461.3,-841 "
"461.3,4 -4,4\"/>\n"
"<!-- start -->\n"
"<!-- tp_new -->\n"
"<g id=\"life_events_graph_node2\" class=\"node\">\n"
"<title>tp_new</title>\n"
"<g id=\"a_life_events_graph_node2\"><a xlink:href=\"typeobj.html#c."
"PyTypeObject.tp_new\" xlink:title=\"tp_new\" target=\"_top\">\n"
"<ellipse fill=\"none\" stroke=\"black\" cx=\"192.8\" cy=\"-772.5\" "
"rx=\"38.8\" ry=\"18\"/>\n"
"<text text-anchor=\"middle\" x=\"192.8\" y=\"-768.23\" font-"
"family=\"monospace,monospace\" font-size=\"12.00\">tp_new</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- start&#45;&gt;tp_new -->\n"
"<g id=\"life_events_graph_edge1\" class=\"edge\">\n"
"<title>start&#45;&gt;tp_new</title>\n"
"<g id=\"a_life_events_graph_edge1\"><a xlink:title=\"start to tp_new: type "
"call\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M192.8,-822.95C192.8,-817.85 "
"192.8,-810.09 192.8,-802.22\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"196.3,-802.42 "
"192.8,-792.42 189.3,-802.42 196.3,-802.42\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge1&#45;label\"><a xlink:title=\"start to "
"tp_new: type call\">\n"
"<text text-anchor=\"start\" x=\"192.8\" y=\"-802.35\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;&#160;&#160;type "
"call &#160;</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_alloc -->\n"
"<g id=\"life_events_graph_node3\" class=\"node\">\n"
"<title>tp_alloc</title>\n"
"<g id=\"a_life_events_graph_node3\"><a xlink:href=\"typeobj.html#c."
"PyTypeObject.tp_alloc\" xlink:title=\"tp_alloc\" target=\"_top\">\n"
"<ellipse fill=\"none\" stroke=\"black\" cx=\"373.8\" cy=\"-772.5\" "
"rx=\"48.34\" ry=\"18\"/>\n"
"<text text-anchor=\"middle\" x=\"373.8\" y=\"-768.23\" font-"
"family=\"monospace,monospace\" font-size=\"12.00\">tp_alloc</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_new&#45;&gt;tp_alloc -->\n"
"<g id=\"life_events_graph_edge2\" class=\"edge\">\n"
"<title>tp_new&#45;&gt;tp_alloc</title>\n"
"<g id=\"a_life_events_graph_edge2\"><a xlink:title=\"tp_new to tp_alloc: "
"direct call\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M232.07,-772.5C256,-772.5 "
"287.05,-772.5 313.98,-772.5\"/>\n"
"<polygon fill=\"none\" stroke=\"black\" points=\"313.73,-776 323.73,-772.5 "
"313.73,-769 313.73,-776\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge2&#45;label\"><a xlink:title=\"tp_new to "
"tp_alloc: direct call\">\n"
"<text text-anchor=\"start\" x=\"240.65\" y=\"-778.35\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;direct call &#160;</"
"text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_init -->\n"
"<g id=\"life_events_graph_node4\" class=\"node\">\n"
"<title>tp_init</title>\n"
"<g id=\"a_life_events_graph_node4\"><a xlink:href=\"typeobj.html#c."
"PyTypeObject.tp_init\" xlink:title=\"tp_init\" target=\"_top\">\n"
"<ellipse fill=\"none\" stroke=\"black\" cx=\"192.8\" cy=\"-717.5\" "
"rx=\"43.57\" ry=\"18\"/>\n"
"<text text-anchor=\"middle\" x=\"192.8\" y=\"-713.23\" font-"
"family=\"monospace,monospace\" font-size=\"12.00\">tp_init</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_new&#45;&gt;tp_init -->\n"
"<g id=\"life_events_graph_edge3\" class=\"edge\">\n"
"<title>tp_new&#45;&gt;tp_init</title>\n"
"<g id=\"a_life_events_graph_edge3\"><a xlink:title=\"tp_new to tp_init\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M192.8,-754.15C192.8,-751.83 "
"192.8,-749.42 192.8,-746.98\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"196.3,-747.23 "
"192.8,-737.23 189.3,-747.23 196.3,-747.23\"/>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- reachable -->\n"
"<g id=\"life_events_graph_node5\" class=\"node\">\n"
"<title>reachable</title>\n"
"<polygon fill=\"none\" stroke=\"black\" points=\"230.8,-680.5 154.8,-680.5 "
"154.8,-644.5 230.8,-644.5 230.8,-680.5\"/>\n"
"<text text-anchor=\"middle\" x=\"192.8\" y=\"-658.23\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\">reachable</text>\n"
"</g>\n"
"<!-- tp_init&#45;&gt;reachable -->\n"
"<g id=\"life_events_graph_edge4\" class=\"edge\">\n"
"<title>tp_init&#45;&gt;reachable</title>\n"
"<g id=\"a_life_events_graph_edge4\"><a xlink:title=\"tp_init to "
"reachable\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M186.44,-699.44C186.24,-697.12 "
"186.11,-694.69 186.07,-692.24\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"189.56,-692.51 "
"186.37,-682.41 182.56,-692.29 189.56,-692.51\"/>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- reachable&#45;&gt;tp_init -->\n"
"<g id=\"life_events_graph_edge7\" class=\"edge\">\n"
"<title>reachable&#45;&gt;tp_init</title>\n"
"<g id=\"a_life_events_graph_edge7\"><a xlink:title=\"reachable to "
"tp_init\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M199.18,-680.89C199.37,-683.22 "
"199.49,-685.65 199.53,-688.11\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"196.04,-687.81 "
"199.2,-697.93 203.04,-688.05 196.04,-687.81\"/>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_traverse -->\n"
"<g id=\"life_events_graph_node6\" class=\"node\">\n"
"<title>tp_traverse</title>\n"
"<g id=\"a_life_events_graph_node6\"><a xlink:href=\"typeobj.html#c."
"PyTypeObject.tp_traverse\" xlink:title=\"tp_traverse\" target=\"_top\">\n"
"<ellipse fill=\"none\" stroke=\"black\" cx=\"136.8\" cy=\"-565.75\" "
"rx=\"62.65\" ry=\"18\"/>\n"
"<text text-anchor=\"middle\" x=\"136.8\" y=\"-561.48\" font-"
"family=\"monospace,monospace\" font-size=\"12.00\">tp_traverse</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- reachable&#45;&gt;tp_traverse -->\n"
"<g id=\"life_events_graph_edge5\" class=\"edge\">\n"
"<title>reachable&#45;&gt;tp_traverse</title>\n"
"<g id=\"a_life_events_graph_edge5\"><a xlink:title=\"tp_traverse to "
"reachable: not in a cyclic isolate\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M143.43,-658.77C108.3,-655.68 "
"65.38,-649.16 54.05,-635.5 41.91,-620.88 42.8,-608.07 54.05,-592.75 "
"60.55,-583.89 70.07,-577.97 80.37,-574.03\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"142.76,-662.23 "
"153.01,-659.54 143.32,-655.25 142.76,-662.23\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge5&#45;label\"><a xlink:title=\"tp_traverse "
"to reachable: not in a cyclic isolate\">\n"
"<text text-anchor=\"start\" x=\"54.05\" y=\"-624.1\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;not in a &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"59.67\" y=\"-609.85\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;cyclic &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"57.05\" y=\"-595.6\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;isolate &#160;</"
"text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- reachable&#45;&gt;tp_traverse -->\n"
"<g id=\"life_events_graph_edge6\" class=\"edge\">\n"
"<title>reachable&#45;&gt;tp_traverse</title>\n"
"<g id=\"a_life_events_graph_edge6\"><a xlink:title=\"reachable to "
"tp_traverse: periodic cyclic isolate detection\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M154.41,-650.07C147.94,-646.44 "
"142.04,-641.69 138.05,-635.5 130.52,-623.82 129.57,-608.56 130.79,-595.38\"/"
">\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"134.25,-595.91 "
"132.17,-585.52 127.31,-594.94 134.25,-595.91\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge6&#45;label\"><a xlink:title=\"reachable to "
"tp_traverse: periodic cyclic isolate detection\">\n"
"<text text-anchor=\"start\" x=\"154.17\" y=\"-624.1\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;periodic &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"138.05\" y=\"-609.85\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;cyclic isolate "
"&#160;&#160;</text>\n"
"<text text-anchor=\"start\" x=\"151.17\" y=\"-595.6\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;detection &#160;</"
"text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- finalized? -->\n"
"<g id=\"life_events_graph_node7\" class=\"node\">\n"
"<title>finalized?</title>\n"
"<g id=\"a_life_events_graph_node7\"><a xlink:title=\"marked as finalized?"
"\">\n"
"<polygon fill=\"none\" stroke=\"black\" points=\"191.8,-487 112.05,-450.5 "
"191.8,-414 271.55,-450.5 191.8,-487\"/>\n"
"<text text-anchor=\"start\" x=\"159.92\" y=\"-453.35\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\">marked as</text>\n"
"<text text-anchor=\"start\" x=\"162.92\" y=\"-439.1\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\">finalized?</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- reachable&#45;&gt;finalized? -->\n"
"<g id=\"life_events_graph_edge10\" class=\"edge\">\n"
"<title>reachable&#45;&gt;finalized?</title>\n"
"<g id=\"a_life_events_graph_edge10\"><a xlink:title=\"reachable to "
"finalized?: no refs\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M227.72,-644.32C230.51,-641.73 "
"232.96,-638.8 234.8,-635.5 244.04,-618.9 235.48,-611.74 234.8,-592.75 "
"233.24,-549.67 243.64,-536.1 227.8,-496 226.37,-492.38 224.53,-488.82 "
"222.45,-485.4\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"225.47,-483.62 "
"216.91,-477.39 219.72,-487.61 225.47,-483.62\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge10&#45;label\"><a xlink:title=\"reachable to "
"finalized?: no refs\">\n"
"<text text-anchor=\"start\" x=\"236.45\" y=\"-561.48\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;no refs &#160;</"
"text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_finalize -->\n"
"<g id=\"life_events_graph_node8\" class=\"node\">\n"
"<title>tp_finalize</title>\n"
"<g id=\"a_life_events_graph_node8\"><a xlink:href=\"typeobj.html#c."
"PyTypeObject.tp_finalize\" xlink:title=\"tp_finalize\" target=\"_top\">\n"
"<ellipse fill=\"none\" stroke=\"black\" cx=\"122.8\" cy=\"-321\" "
"rx=\"62.65\" ry=\"18\"/>\n"
"<text text-anchor=\"middle\" x=\"122.8\" y=\"-316.73\" font-"
"family=\"monospace,monospace\" font-size=\"12.00\">tp_finalize</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- reachable&#45;&gt;tp_finalize -->\n"
"<g id=\"life_events_graph_edge8\" class=\"edge\">\n"
"<title>reachable&#45;&gt;tp_finalize</title>\n"
"<g id=\"a_life_events_graph_edge8\"><a xlink:title=\"tp_finalize to "
"reachable: resurrected (maybe remove finalized mark)\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M142.86,-659.6C103.8,-656.96 "
"53.97,-650.63 40.8,-635.5 -37.32,-545.75 69.61,-390.31 109.14,-338.99\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"142.62,-663.09 "
"152.82,-660.2 143.05,-656.11 142.62,-663.09\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge8&#45;label\"><a xlink:title=\"tp_finalize "
"to reachable: resurrected (maybe remove finalized mark)\">\n"
"<text text-anchor=\"start\" x=\"33.68\" y=\"-527.35\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;resurrected &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"22.43\" y=\"-513.1\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;(maybe remove &#160;"
"</text>\n"
"<text text-anchor=\"start\" x=\"23.18\" y=\"-498.85\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;finalized mark) "
"&#160;</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- uncollectable -->\n"
"<g id=\"life_events_graph_node10\" class=\"node\">\n"
"<title>uncollectable</title>\n"
"<g id=\"a_life_events_graph_node10\"><a xlink:title=\"uncollectable "
"(leaked)\">\n"
"<polygon fill=\"none\" stroke=\"black\" points=\"371.92,-159.75 "
"275.67,-159.75 275.67,-123.25 371.92,-123.25 371.92,-159.75\"/>\n"
"<text text-anchor=\"start\" x=\"283.67\" y=\"-144.35\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\">uncollectable</text>\n"
"<text text-anchor=\"start\" x=\"299.42\" y=\"-130.1\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\">(leaked)</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- reachable&#45;&gt;uncollectable -->\n"
"<g id=\"life_events_graph_edge19\" class=\"edge\">\n"
"<title>reachable&#45;&gt;uncollectable</title>\n"
"<g id=\"a_life_events_graph_edge19\"><a xlink:title=\"reachable to "
"uncollectable: cyclic isolate (no GC support)\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M231.2,-652.03C270.79,-639.69 "
"326.8,-613.9 326.8,-566.75 326.8,-566.75 326.8,-566.75 326.8,-237.5 "
"326.8,-215.3 325.97,-190.2 325.18,-171.37\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"328.68,-171.35 "
"324.75,-161.52 321.69,-171.66 328.68,-171.35\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge19&#45;label\"><a xlink:title=\"reachable to "
"uncollectable: cyclic isolate (no GC support)\">\n"
"<text text-anchor=\"start\" x=\"335.05\" y=\"-393.6\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;cyclic &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"332.42\" y=\"-379.35\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;isolate &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"331.3\" y=\"-365.1\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;(no GC &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"326.8\" y=\"-350.85\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;support) &#160;</"
"text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_dealloc -->\n"
"<g id=\"life_events_graph_node11\" class=\"node\">\n"
"<title>tp_dealloc</title>\n"
"<g id=\"a_life_events_graph_node11\"><a xlink:href=\"typeobj.html#c."
"PyTypeObject.tp_dealloc\" xlink:title=\"tp_dealloc\" target=\"_top\">\n"
"<ellipse fill=\"none\" stroke=\"black\" cx=\"200.8\" cy=\"-86.25\" "
"rx=\"57.88\" ry=\"18\"/>\n"
"<text text-anchor=\"middle\" x=\"200.8\" y=\"-81.97\" font-"
"family=\"monospace,monospace\" font-size=\"12.00\">tp_dealloc</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- reachable&#45;&gt;tp_dealloc -->\n"
"<g id=\"life_events_graph_edge20\" class=\"edge\">\n"
"<title>reachable&#45;&gt;tp_dealloc</title>\n"
"<path fill=\"none\" stroke=\"black\" d=\"M231.23,-661.18C293.08,-658.43 "
"407.8,-643.03 407.8,-566.75 407.8,-566.75 407.8,-566.75 407.8,-140.5 "
"407.8,-111.22 329.12,-97.8 268.77,-91.82\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"269.15,-88.34 "
"258.87,-90.89 268.5,-95.31 269.15,-88.34\"/>\n"
"<g id=\"a_life_events_graph_edge20&#45;label\"><a xlink:title=\"reachable to "
"tp_dealloc: no refs\">\n"
"<text text-anchor=\"start\" x=\"407.8\" y=\"-316.73\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;no refs</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_traverse&#45;&gt;finalized? -->\n"
"<g id=\"life_events_graph_edge9\" class=\"edge\">\n"
"<title>tp_traverse&#45;&gt;finalized?</title>\n"
"<g id=\"a_life_events_graph_edge9\"><a xlink:title=\"tp_traverse to "
"finalized?: cyclic isolate\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M145.15,-547.55C152.4,-532.62 "
"163.18,-510.43 172.55,-491.13\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"175.7,-492.66 "
"176.92,-482.14 169.4,-489.61 175.7,-492.66\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge9&#45;label\"><a xlink:title=\"tp_traverse "
"to finalized?: cyclic isolate\">\n"
"<text text-anchor=\"start\" x=\"171.85\" y=\"-520.23\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;cyclic &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"169.22\" y=\"-505.98\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;isolate &#160;</"
"text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- finalized?&#45;&gt;tp_finalize -->\n"
"<g id=\"life_events_graph_edge11\" class=\"edge\">\n"
"<title>finalized?&#45;&gt;tp_finalize</title>\n"
"<g id=\"a_life_events_graph_edge11\"><a xlink:title=\"finalized? to "
"tp_finalize: no (mark as finalized)\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M172.89,-422.6C169.14,-416.89 "
"165.34,-410.82 162.05,-405 151.89,-387.08 141.99,-366.11 134.68,-349.73\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"137.89,-348.35 "
"130.66,-340.61 131.48,-351.17 137.89,-348.35\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge11&#45;label\"><a xlink:title=\"finalized? "
"to tp_finalize: no (mark as finalized)\">\n"
"<text text-anchor=\"start\" x=\"170.67\" y=\"-379.35\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;no (mark &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"162.05\" y=\"-365.1\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;as finalized) &#160;"
"</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_clear -->\n"
"<g id=\"life_events_graph_node9\" class=\"node\">\n"
"<title>tp_clear</title>\n"
"<g id=\"a_life_events_graph_node9\"><a xlink:href=\"typeobj.html#c."
"PyTypeObject.tp_clear\" xlink:title=\"tp_clear\" target=\"_top\">\n"
"<ellipse fill=\"none\" stroke=\"black\" cx=\"222.8\" cy=\"-238.5\" "
"rx=\"48.34\" ry=\"18\"/>\n"
"<text text-anchor=\"middle\" x=\"222.8\" y=\"-234.22\" font-"
"family=\"monospace,monospace\" font-size=\"12.00\">tp_clear</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- finalized?&#45;&gt;tp_clear -->\n"
"<g id=\"life_events_graph_edge12\" class=\"edge\">\n"
"<title>finalized?&#45;&gt;tp_clear</title>\n"
"<g id=\"a_life_events_graph_edge12\"><a xlink:title=\"finalized? to "
"tp_clear: yes\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M227.56,-430.1C236.46,-423.41 "
"244.86,-415.02 249.8,-405 277.22,-349.39 274.06,-322.55 249.8,-265.5 "
"249.7,-265.27 249.6,-265.04 249.49,-264.81\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"252.41,-262.88 "
"243.93,-256.52 246.6,-266.78 252.41,-262.88\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge12&#45;label\"><a xlink:title=\"finalized? "
"to tp_clear: yes\">\n"
"<text text-anchor=\"start\" x=\"269.2\" y=\"-316.73\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;yes &#160;</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_finalize&#45;&gt;tp_clear -->\n"
"<g id=\"life_events_graph_edge13\" class=\"edge\">\n"
"<title>tp_finalize&#45;&gt;tp_clear</title>\n"
"<g id=\"a_life_events_graph_edge13\"><a xlink:title=\"tp_finalize to "
"tp_clear: no refs or cyclic isolate\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M130.02,-302.72C135.75,-290.85 "
"144.8,-275.49 156.8,-265.5 161.95,-261.21 167.9,-257.57 174.07,-254.49\"/>\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"175.46,-257.71 "
"183.18,-250.45 172.62,-251.31 175.46,-257.71\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge13&#45;label\"><a xlink:title=\"tp_finalize "
"to tp_clear: no refs or cyclic isolate\">\n"
"<text text-anchor=\"start\" x=\"164.3\" y=\"-282.6\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;no refs or &#160;"
"&#160;</text>\n"
"<text text-anchor=\"start\" x=\"156.8\" y=\"-268.35\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;cyclic isolate "
"&#160;</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_finalize&#45;&gt;tp_dealloc -->\n"
"<g id=\"life_events_graph_edge14\" class=\"edge\">\n"
"<title>tp_finalize&#45;&gt;tp_dealloc</title>\n"
"<g id=\"a_life_events_graph_edge14\"><a xlink:href=\"lifecycle.html#c."
"PyObject_CallFinalizerFromDealloc\" xlink:title=\"tp_dealloc to tp_finalize: "
"recommended call (see explanation)\" target=\"_top\">\n"
"<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" "
"d=\"M85.85,-298.52C42.09,-270.18 -21.4,-218.11 7.8,-168.75 36.22,-120.7 "
"99.95,-100.97 146.42,-92.87\"/>\n"
"<polygon fill=\"none\" stroke=\"black\" points=\"83.78,-301.35 94.11,-303.72 "
"87.52,-295.43 83.78,-301.35\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge14&#45;label\"><a xlink:href=\"lifecycle."
"html#c.PyObject_CallFinalizerFromDealloc\" xlink:title=\"tp_dealloc to "
"tp_finalize: recommended call (see explanation)\" target=\"_top\">\n"
"<text text-anchor=\"start\" x=\"7.8\" y=\"-200.1\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;recommended</text>\n"
"<text text-anchor=\"start\" x=\"25.8\" y=\"-185.85\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;call (see</text>\n"
"<text text-anchor=\"start\" x=\"13.05\" y=\"-171.6\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;explanation)</"
"text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_finalize&#45;&gt;tp_dealloc -->\n"
"<g id=\"life_events_graph_edge15\" class=\"edge\">\n"
"<title>tp_finalize&#45;&gt;tp_dealloc</title>\n"
"<g id=\"a_life_events_graph_edge15\"><a xlink:title=\"tp_finalize to "
"tp_dealloc: no refs\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M123.03,-302.58C123.95,-273.77 "
"128.08,-214.78 146.05,-168.75 153.95,-148.5 167.56,-128.2 179.24,-112.92\"/"
">\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"181.81,-115.32 "
"185.25,-105.3 176.31,-110.98 181.81,-115.32\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge15&#45;label\"><a xlink:title=\"tp_finalize "
"to tp_dealloc: no refs\">\n"
"<text text-anchor=\"start\" x=\"146.05\" y=\"-185.85\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;&#160;no refs &#160;"
"</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_clear&#45;&gt;uncollectable -->\n"
"<g id=\"life_events_graph_edge17\" class=\"edge\">\n"
"<title>tp_clear&#45;&gt;uncollectable</title>\n"
"<g id=\"a_life_events_graph_edge17\"><a xlink:title=\"tp_clear to "
"uncollectable: cyclic isolate\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M227.75,-220.38C232.99,-205 "
"242.67,-182.74 258.05,-168.75 260.43,-166.58 263.02,-164.58 265.74,-162.73\"/"
">\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"267.27,-165.89 "
"274.12,-157.81 263.73,-159.86 267.27,-165.89\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge17&#45;label\"><a xlink:title=\"tp_clear to "
"uncollectable: cyclic isolate\">\n"
"<text text-anchor=\"start\" x=\"260.67\" y=\"-192.97\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;cyclic &#160;</"
"text>\n"
"<text text-anchor=\"start\" x=\"258.05\" y=\"-178.72\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;isolate &#160;</"
"text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_clear&#45;&gt;tp_dealloc -->\n"
"<g id=\"life_events_graph_edge16\" class=\"edge\">\n"
"<title>tp_clear&#45;&gt;tp_dealloc</title>\n"
"<g id=\"a_life_events_graph_edge16\"><a xlink:title=\"tp_clear to "
"tp_dealloc: no refs\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M219.7,-220.24C216.92,-204.51 "
"212.83,-180.61 209.8,-159.75 207.7,-145.34 205.67,-129.26 204.07,-115.92\"/"
">\n"
"<polygon fill=\"black\" stroke=\"black\" points=\"207.56,-115.59 "
"202.91,-106.07 200.61,-116.41 207.56,-115.59\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge16&#45;label\"><a xlink:title=\"tp_clear to "
"tp_dealloc: no refs\">\n"
"<text text-anchor=\"start\" x=\"209.8\" y=\"-137.22\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;no refs &#160;</"
"text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- uncollectable&#45;&gt;tp_dealloc -->\n"
"<!-- tp_free -->\n"
"<g id=\"life_events_graph_node12\" class=\"node\">\n"
"<title>tp_free</title>\n"
"<g id=\"a_life_events_graph_node12\"><a xlink:href=\"typeobj.html#c."
"PyTypeObject.tp_free\" xlink:title=\"tp_free\" target=\"_top\">\n"
"<ellipse fill=\"none\" stroke=\"black\" cx=\"200.8\" cy=\"-18\" rx=\"43.57\" "
"ry=\"18\"/>\n"
"<text text-anchor=\"middle\" x=\"200.8\" y=\"-13.72\" font-"
"family=\"monospace,monospace\" font-size=\"12.00\">tp_free</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"<!-- tp_dealloc&#45;&gt;tp_free -->\n"
"<g id=\"life_events_graph_edge21\" class=\"edge\">\n"
"<title>tp_dealloc&#45;&gt;tp_free</title>\n"
"<g id=\"a_life_events_graph_edge21\"><a xlink:title=\"tp_dealloc to tp_free: "
"direct call\">\n"
"<path fill=\"none\" stroke=\"black\" d=\"M200.8,-67.84C200.8,-61.63 "
"200.8,-54.46 200.8,-47.56\"/>\n"
"<polygon fill=\"none\" stroke=\"black\" points=\"204.3,-47.57 200.8,-37.57 "
"197.3,-47.57 204.3,-47.57\"/>\n"
"</a>\n"
"</g>\n"
"<g id=\"a_life_events_graph_edge21&#45;label\"><a xlink:title=\"tp_dealloc "
"to tp_free: direct call\">\n"
"<text text-anchor=\"start\" x=\"200.8\" y=\"-47.85\" font-family=\"serif,"
"serif\" font-style=\"italic\" font-size=\"12.00\"> &#160;&#160;&#160;direct "
"call &#160;</text>\n"
"</a>\n"
"</g>\n"
"</g>\n"
"</g>\n"
"</svg>\n"
msgstr ""

#: ../../../c-api/lifecycle.rst:38
msgid ""
"<script>\n"
"    (() => {\n"
"        const g = document.getElementById('life_events_graph');\n"
"        const title = g.querySelector(':scope > title');\n"
"        title.id = 'life-events-graph-title';\n"
"        const svg = g.closest('svg');\n"
"        svg.role = 'img';\n"
"        svg.setAttribute('aria-describedby',\n"
"                         'life-events-graph-description');\n"
"        svg.setAttribute('aria-labelledby', 'life-events-graph-title');\n"
"    })();\n"
"</script>"
msgstr ""

#: ../../../c-api/lifecycle.rst:55 ../../../c-api/lifecycle.rst:62
msgid "Diagram showing events in an object's life.  Explained in detail below."
msgstr ""

#: ../../../c-api/lifecycle.rst:70
msgid "Explanation:"
msgstr ""

#: ../../../c-api/lifecycle.rst:72
msgid "When a new object is constructed by calling its type:"
msgstr ""

#: ../../../c-api/lifecycle.rst:74
msgid ":c:member:`~PyTypeObject.tp_new` is called to create a new object."
msgstr ""

#: ../../../c-api/lifecycle.rst:75
msgid ""
":c:member:`~PyTypeObject.tp_alloc` is directly called by :c:member:"
"`~PyTypeObject.tp_new` to allocate the memory for the new object."
msgstr ""

#: ../../../c-api/lifecycle.rst:78
msgid ""
":c:member:`~PyTypeObject.tp_init` initializes the newly created object. :c:"
"member:`!tp_init` can be called again to re-initialize an object, if "
"desired. The :c:member:`!tp_init` call can also be skipped entirely, for "
"example by Python code calling :py:meth:`~object.__new__`."
msgstr ""

#: ../../../c-api/lifecycle.rst:83
msgid "After :c:member:`!tp_init` completes, the object is ready to use."
msgstr ""

#: ../../../c-api/lifecycle.rst:84
msgid "Some time after the last reference to an object is removed:"
msgstr ""

#: ../../../c-api/lifecycle.rst:86
msgid ""
"If an object is not marked as *finalized*, it might be finalized by marking "
"it as *finalized* and calling its :c:member:`~PyTypeObject.tp_finalize` "
"function.  Python does *not* finalize an object when the last reference to "
"it is deleted; use :c:func:`PyObject_CallFinalizerFromDealloc` to ensure "
"that :c:member:`~PyTypeObject.tp_finalize` is always called."
msgstr ""

#: ../../../c-api/lifecycle.rst:92
msgid ""
"If the object is marked as finalized, :c:member:`~PyTypeObject.tp_clear` "
"might be called by the garbage collector to clear references held by the "
"object.  It is *not* called when the object's reference count reaches zero."
msgstr ""

#: ../../../c-api/lifecycle.rst:96
msgid ""
":c:member:`~PyTypeObject.tp_dealloc` is called to destroy the object. To "
"avoid code duplication, :c:member:`~PyTypeObject.tp_dealloc` typically calls "
"into :c:member:`~PyTypeObject.tp_clear` to free up the object's references."
msgstr ""

#: ../../../c-api/lifecycle.rst:100
msgid ""
"When :c:member:`~PyTypeObject.tp_dealloc` finishes object destruction, it "
"directly calls :c:member:`~PyTypeObject.tp_free` (usually set to :c:func:"
"`PyObject_Free` or :c:func:`PyObject_GC_Del` automatically as appropriate "
"for the type) to deallocate the memory."
msgstr ""

#: ../../../c-api/lifecycle.rst:105
msgid ""
"The :c:member:`~PyTypeObject.tp_finalize` function is permitted to add a "
"reference to the object if desired.  If it does, the object is "
"*resurrected*, preventing its pending destruction.  (Only :c:member:`!"
"tp_finalize` is allowed to resurrect an object; :c:member:`~PyTypeObject."
"tp_clear` and :c:member:`~PyTypeObject.tp_dealloc` cannot without calling "
"into :c:member:`!tp_finalize`.)  Resurrecting an object may or may not cause "
"the object's *finalized* mark to be removed.  Currently, Python does not "
"remove the *finalized* mark from a resurrected object if it supports garbage "
"collection (i.e., the :c:macro:`Py_TPFLAGS_HAVE_GC` flag is set) but does "
"remove the mark if the object does not support garbage collection; either or "
"both of these behaviors may change in the future."
msgstr ""

#: ../../../c-api/lifecycle.rst:118
msgid ""
":c:member:`~PyTypeObject.tp_dealloc` can optionally call :c:member:"
"`~PyTypeObject.tp_finalize` via :c:func:`PyObject_CallFinalizerFromDealloc` "
"if it wishes to reuse that code to help with object destruction.  This is "
"recommended because it guarantees that :c:member:`!tp_finalize` is always "
"called before destruction.  See the :c:member:`~PyTypeObject.tp_dealloc` "
"documentation for example code."
msgstr ""

#: ../../../c-api/lifecycle.rst:125
msgid ""
"If the object is a member of a :term:`cyclic isolate` and either :c:member:"
"`~PyTypeObject.tp_clear` fails to break the reference cycle or the cyclic "
"isolate is not detected (perhaps :func:`gc.disable` was called, or the :c:"
"macro:`Py_TPFLAGS_HAVE_GC` flag was erroneously omitted in one of the "
"involved types), the objects remain indefinitely uncollectable (they "
"\"leak\").  See :data:`gc.garbage`."
msgstr ""

#: ../../../c-api/lifecycle.rst:132
msgid ""
"If the object is marked as supporting garbage collection (the :c:macro:"
"`Py_TPFLAGS_HAVE_GC` flag is set in :c:member:`~PyTypeObject.tp_flags`), the "
"following events are also possible:"
msgstr ""

#: ../../../c-api/lifecycle.rst:136
msgid ""
"The garbage collector occasionally calls :c:member:`~PyTypeObject."
"tp_traverse` to identify :term:`cyclic isolates <cyclic isolate>`."
msgstr ""

#: ../../../c-api/lifecycle.rst:139
msgid ""
"When the garbage collector discovers a :term:`cyclic isolate`, it finalizes "
"one of the objects in the group by marking it as *finalized* and calling "
"its :c:member:`~PyTypeObject.tp_finalize` function, if it has one. This "
"repeats until the cyclic isolate doesn't exist or all of the objects have "
"been finalized."
msgstr ""

#: ../../../c-api/lifecycle.rst:144
msgid ""
":c:member:`~PyTypeObject.tp_finalize` is permitted to resurrect the object "
"by adding a reference from outside the :term:`cyclic isolate`.  The new "
"reference causes the group of objects to no longer form a cyclic isolate "
"(the reference cycle may still exist, but if it does the objects are no "
"longer isolated)."
msgstr ""

#: ../../../c-api/lifecycle.rst:149
msgid ""
"When the garbage collector discovers a :term:`cyclic isolate` and all of the "
"objects in the group have already been marked as *finalized*, the garbage "
"collector clears one or more of the uncleared objects in the group (possibly "
"concurrently) by calling each's :c:member:`~PyTypeObject.tp_clear` "
"function.  This repeats as long as the cyclic isolate still exists and not "
"all of the objects have been cleared."
msgstr ""

#: ../../../c-api/lifecycle.rst:158
msgid "Cyclic Isolate Destruction"
msgstr ""

#: ../../../c-api/lifecycle.rst:160
msgid ""
"Listed below are the stages of life of a hypothetical :term:`cyclic isolate` "
"that continues to exist after each member object is finalized or cleared.  "
"It is a memory leak if a cyclic isolate progresses through all of these "
"stages; it should vanish once all objects are cleared, if not sooner.  A "
"cyclic isolate can vanish either because the reference cycle is broken or "
"because the objects are no longer isolated due to finalizer resurrection "
"(see :c:member:`~PyTypeObject.tp_finalize`)."
msgstr ""

#: ../../../c-api/lifecycle.rst:168
msgid ""
"**Reachable** (not yet a cyclic isolate): All objects are in their normal, "
"reachable state.  A reference cycle could exist, but an external reference "
"means the objects are not yet isolated."
msgstr ""

#: ../../../c-api/lifecycle.rst:171
msgid ""
"**Unreachable but consistent:** The final reference from outside the cyclic "
"group of objects has been removed, causing the objects to become isolated "
"(thus a cyclic isolate is born).  None of the group's objects have been "
"finalized or cleared yet.  The cyclic isolate remains at this stage until "
"some future run of the garbage collector (not necessarily the next run "
"because the next run might not scan every object)."
msgstr ""

#: ../../../c-api/lifecycle.rst:177
msgid ""
"**Mix of finalized and not finalized:** Objects in a cyclic isolate are "
"finalized one at a time, which means that there is a period of time when the "
"cyclic isolate is composed of a mix of finalized and non-finalized objects. "
"Finalization order is unspecified, so it can appear random.  A finalized "
"object must behave in a sane manner when non-finalized objects interact with "
"it, and a non-finalized object must be able to tolerate the finalization of "
"an arbitrary subset of its referents."
msgstr ""

#: ../../../c-api/lifecycle.rst:184
msgid ""
"**All finalized:** All objects in a cyclic isolate are finalized before any "
"of them are cleared."
msgstr ""

#: ../../../c-api/lifecycle.rst:186
msgid ""
"**Mix of finalized and cleared:** The objects can be cleared serially or "
"concurrently (but with the :term:`GIL` held); either way, some will finish "
"before others.  A finalized object must be able to tolerate the clearing of "
"a subset of its referents.  :pep:`442` calls this stage \"cyclic trash\"."
msgstr ""

#: ../../../c-api/lifecycle.rst:190
msgid ""
"**Leaked:** If a cyclic isolate still exists after all objects in the group "
"have been finalized and cleared, then the objects remain indefinitely "
"uncollectable (see :data:`gc.garbage`).  It is a bug if a cyclic isolate "
"reaches this stage---it means the :c:member:`~PyTypeObject.tp_clear` methods "
"of the participating objects have failed to break the reference cycle as "
"required."
msgstr ""

#: ../../../c-api/lifecycle.rst:197
msgid ""
"If :c:member:`~PyTypeObject.tp_clear` did not exist, then Python would have "
"no way to safely break a reference cycle.  Simply destroying an object in a "
"cyclic isolate would result in a dangling pointer, triggering undefined "
"behavior when an object referencing the destroyed object is itself "
"destroyed.  The clearing step makes object destruction a two-phase process: "
"first :c:member:`~PyTypeObject.tp_clear` is called to partially destroy the "
"objects enough to detangle them from each other, then :c:member:"
"`~PyTypeObject.tp_dealloc` is called to complete the destruction."
msgstr ""

#: ../../../c-api/lifecycle.rst:206
msgid ""
"Unlike clearing, finalization is not a phase of destruction.  A finalized "
"object must still behave properly by continuing to fulfill its design "
"contracts.  An object's finalizer is allowed to execute arbitrary Python "
"code, and is even allowed to prevent the impending destruction by adding a "
"reference. The finalizer is only related to destruction by call order---if "
"it runs, it runs before destruction, which starts with :c:member:"
"`~PyTypeObject.tp_clear` (if called) and concludes with :c:member:"
"`~PyTypeObject.tp_dealloc`."
msgstr ""

#: ../../../c-api/lifecycle.rst:214
msgid ""
"The finalization step is not necessary to safely reclaim the objects in a "
"cyclic isolate, but its existence makes it easier to design types that "
"behave in a sane manner when objects are cleared.  Clearing an object might "
"necessarily leave it in a broken, partially destroyed state---it might be "
"unsafe to call any of the cleared object's methods or access any of its "
"attributes.  With finalization, only finalized objects can possibly interact "
"with cleared objects; non-finalized objects are guaranteed to interact with "
"only non-cleared (but potentially finalized) objects."
msgstr ""

#: ../../../c-api/lifecycle.rst:223
msgid "To summarize the possible interactions:"
msgstr ""

#: ../../../c-api/lifecycle.rst:225
msgid ""
"A non-finalized object might have references to or from non-finalized and "
"finalized objects, but not to or from cleared objects."
msgstr ""

#: ../../../c-api/lifecycle.rst:227
msgid ""
"A finalized object might have references to or from non-finalized, "
"finalized, and cleared objects."
msgstr ""

#: ../../../c-api/lifecycle.rst:229
msgid ""
"A cleared object might have references to or from finalized and cleared "
"objects, but not to or from non-finalized objects."
msgstr ""

#: ../../../c-api/lifecycle.rst:232
msgid ""
"Without any reference cycles, an object can be simply destroyed once its "
"last reference is deleted; the finalization and clearing steps are not "
"necessary to safely reclaim unused objects.  However, it can be useful to "
"automatically call :c:member:`~PyTypeObject.tp_finalize` and :c:member:"
"`~PyTypeObject.tp_clear` before destruction anyway because type design is "
"simplified when all objects always experience the same series of events "
"regardless of whether they participated in a cyclic isolate.  Python "
"currently only calls :c:member:`~PyTypeObject.tp_finalize` and :c:member:"
"`~PyTypeObject.tp_clear` as needed to destroy a cyclic isolate; this may "
"change in a future version."
msgstr ""

#: ../../../c-api/lifecycle.rst:244
msgid "Functions"
msgstr ""

#: ../../../c-api/lifecycle.rst:246
msgid "To allocate and free memory, see :ref:`allocating-objects`."
msgstr ""

#: ../../../c-api/lifecycle.rst:251
msgid ""
"Finalizes the object as described in :c:member:`~PyTypeObject.tp_finalize`. "
"Call this function (or :c:func:`PyObject_CallFinalizerFromDealloc`) instead "
"of calling :c:member:`~PyTypeObject.tp_finalize` directly because this "
"function may deduplicate multiple calls to :c:member:`!tp_finalize`. "
"Currently, calls are only deduplicated if the type supports garbage "
"collection (i.e., the :c:macro:`Py_TPFLAGS_HAVE_GC` flag is set); this may "
"change in the future."
msgstr ""

#: ../../../c-api/lifecycle.rst:262
msgid ""
"Same as :c:func:`PyObject_CallFinalizer` but meant to be called at the "
"beginning of the object's destructor (:c:member:`~PyTypeObject.tp_dealloc`). "
"There must not be any references to the object.  If the object's finalizer "
"resurrects the object, this function returns -1; no further destruction "
"should happen.  Otherwise, this function returns 0 and destruction can "
"continue normally."
msgstr ""

#: ../../../c-api/lifecycle.rst:271
msgid ":c:member:`~PyTypeObject.tp_dealloc` for example code."
msgstr ""
