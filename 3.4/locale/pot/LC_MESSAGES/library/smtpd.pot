# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-10 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/smtpd.rst:2
msgid ":mod:`smtpd` --- SMTP Server"
msgstr ""

#: ../../../library/smtpd.rst:10
msgid "**Source code:** :source:`Lib/smtpd.py`"
msgstr ""

#: ../../../library/smtpd.rst:14
msgid "This module offers several classes to implement SMTP (email) servers."
msgstr ""

#: ../../../library/smtpd.rst:18
msgid ""
"The `aiosmtpd <http://aiosmtpd.readthedocs.io/>`_ package is a recommended "
"replacement for this module.  It is based on :mod:`asyncio` and provides a "
"more straightforward API.  :mod:`smtpd` should be considered deprecated."
msgstr ""

#: ../../../library/smtpd.rst:22
msgid ""
"Several server implementations are present; one is a generic do-nothing "
"implementation, which can be overridden, while the other two offer specific "
"mail-sending strategies."
msgstr ""

#: ../../../library/smtpd.rst:26
msgid ""
"Additionally the SMTPChannel may be extended to implement very specific "
"interaction behaviour with SMTP clients."
msgstr ""

#: ../../../library/smtpd.rst:29
msgid "The code supports :RFC:`5321`, plus the :rfc:`1870` SIZE extension."
msgstr ""

#: ../../../library/smtpd.rst:33
msgid "SMTPServer Objects"
msgstr ""

#: ../../../library/smtpd.rst:39
msgid ""
"Create a new :class:`SMTPServer` object, which binds to local address "
"*localaddr*.  It will treat *remoteaddr* as an upstream SMTP relayer.  It "
"inherits from :class:`asyncore.dispatcher`, and so will insert itself into :"
"mod:`asyncore`'s event loop on instantiation."
msgstr ""

#: ../../../library/smtpd.rst:44 ../../../library/smtpd.rst:113
msgid ""
"*data_size_limit* specifies the maximum number of bytes that will be "
"accepted in a ``DATA`` command.  A value of ``None`` or ``0`` means no limit."
msgstr ""

#: ../../../library/smtpd.rst:48 ../../../library/smtpd.rst:117
msgid ""
"A dictionary can be specified in *map* to avoid using a global socket map."
msgstr ""

#: ../../../library/smtpd.rst:52
msgid ""
"Raise :exc:`NotImplementedError` exception. Override this in subclasses to "
"do something useful with this message. Whatever was passed in the "
"constructor as *remoteaddr* will be available as the :attr:`_remoteaddr` "
"attribute. *peer* is the remote host's address, *mailfrom* is the envelope "
"originator, *rcpttos* are the envelope recipients and *data* is a string "
"containing the contents of the e-mail (which should be in :rfc:`2822` "
"format)."
msgstr ""

#: ../../../library/smtpd.rst:62
msgid ""
"Override this in subclasses to use a custom :class:`SMTPChannel` for "
"managing SMTP clients."
msgstr ""

#: ../../../library/smtpd.rst:65
msgid "The *map* argument was added."
msgstr ""

#: ../../../library/smtpd.rst:70
msgid "DebuggingServer Objects"
msgstr ""

#: ../../../library/smtpd.rst:75
msgid ""
"Create a new debugging server.  Arguments are as per :class:`SMTPServer`. "
"Messages will be discarded, and printed on stdout."
msgstr ""

#: ../../../library/smtpd.rst:80
msgid "PureProxy Objects"
msgstr ""

#: ../../../library/smtpd.rst:85
msgid ""
"Create a new pure proxy server. Arguments are as per :class:`SMTPServer`. "
"Everything will be relayed to *remoteaddr*.  Note that running this has a "
"good chance to make you into an open relay, so please be careful."
msgstr ""

#: ../../../library/smtpd.rst:91
msgid "MailmanProxy Objects"
msgstr ""

#: ../../../library/smtpd.rst:96
msgid ""
"Create a new pure proxy server. Arguments are as per :class:`SMTPServer`. "
"Everything will be relayed to *remoteaddr*, unless local mailman "
"configurations knows about an address, in which case it will be handled via "
"mailman.  Note that running this has a good chance to make you into an open "
"relay, so please be careful."
msgstr ""

#: ../../../library/smtpd.rst:103
msgid "SMTPChannel Objects"
msgstr ""

#: ../../../library/smtpd.rst:108
msgid ""
"Create a new :class:`SMTPChannel` object which manages the communication "
"between the server and a single SMTP client."
msgstr ""

#: ../../../library/smtpd.rst:111
msgid "*conn* and *addr* are as per the instance variables described below."
msgstr ""

#: ../../../library/smtpd.rst:119
msgid ""
"To use a custom SMTPChannel implementation you need to override the :attr:"
"`SMTPServer.channel_class` of your :class:`SMTPServer`."
msgstr ""

#: ../../../library/smtpd.rst:122
msgid "The :class:`SMTPChannel` has the following instance variables:"
msgstr ""

#: ../../../library/smtpd.rst:126
msgid "Holds the :class:`SMTPServer` that spawned this channel."
msgstr ""

#: ../../../library/smtpd.rst:130
msgid "Holds the socket object connecting to the client."
msgstr ""

#: ../../../library/smtpd.rst:134
msgid ""
"Holds the address of the client, the second value returned by :func:`socket."
"accept <socket.socket.accept>`"
msgstr ""

#: ../../../library/smtpd.rst:139
msgid ""
"Holds a list of the line strings (decoded using UTF-8) received from the "
"client. The lines have their ``\"\\r\\n\"`` line ending translated to "
"``\"\\n\"``."
msgstr ""

#: ../../../library/smtpd.rst:145
msgid ""
"Holds the current state of the channel. This will be either :attr:`COMMAND` "
"initially and then :attr:`DATA` after the client sends a \"DATA\" line."
msgstr ""

#: ../../../library/smtpd.rst:151
msgid ""
"Holds a string containing the greeting sent by the client in its \"HELO\"."
msgstr ""

#: ../../../library/smtpd.rst:155
msgid ""
"Holds a string containing the address identified in the \"MAIL FROM:\" line "
"from the client."
msgstr ""

#: ../../../library/smtpd.rst:160
msgid ""
"Holds a list of strings containing the addresses identified in the \"RCPT TO:"
"\" lines from the client."
msgstr ""

#: ../../../library/smtpd.rst:165
msgid ""
"Holds a string containing all of the data sent by the client during the DATA "
"state, up to but not including the terminating ``\"\\r\\n.\\r\\n\"``."
msgstr ""

#: ../../../library/smtpd.rst:170
msgid ""
"Holds the fully-qualified domain name of the server as returned by :func:"
"`socket.getfqdn`."
msgstr ""

#: ../../../library/smtpd.rst:175
msgid ""
"Holds the name of the client peer as returned by ``conn.getpeername()`` "
"where ``conn`` is :attr:`conn`."
msgstr ""

#: ../../../library/smtpd.rst:178
msgid ""
"The :class:`SMTPChannel` operates by invoking methods named "
"``smtp_<command>`` upon reception of a command line from the client. Built "
"into the base :class:`SMTPChannel` class are methods for handling the "
"following commands (and responding to them appropriately):"
msgstr ""

#: ../../../library/smtpd.rst:184
msgid "Command"
msgstr ""

#: ../../../library/smtpd.rst:184
msgid "Action taken"
msgstr ""

#: ../../../library/smtpd.rst:186
msgid "HELO"
msgstr ""

#: ../../../library/smtpd.rst:186
msgid ""
"Accepts the greeting from the client and stores it in :attr:"
"`seen_greeting`.  Sets server to base command mode."
msgstr ""

#: ../../../library/smtpd.rst:188
msgid "EHLO"
msgstr ""

#: ../../../library/smtpd.rst:188
msgid ""
"Accepts the greeting from the client and stores it in :attr:"
"`seen_greeting`.  Sets server to extended command mode."
msgstr ""

#: ../../../library/smtpd.rst:190
msgid "NOOP"
msgstr ""

#: ../../../library/smtpd.rst:190
msgid "Takes no action."
msgstr ""

#: ../../../library/smtpd.rst:191
msgid "QUIT"
msgstr ""

#: ../../../library/smtpd.rst:191
msgid "Closes the connection cleanly."
msgstr ""

#: ../../../library/smtpd.rst:192
msgid "MAIL"
msgstr ""

#: ../../../library/smtpd.rst:192
msgid ""
"Accepts the \"MAIL FROM:\" syntax and stores the supplied address as :attr:"
"`mailfrom`.  In extended command mode, accepts the :rfc:`1870` SIZE "
"attribute and responds appropriately based on the value of *data_size_limit*."
msgstr ""

#: ../../../library/smtpd.rst:196
msgid "RCPT"
msgstr ""

#: ../../../library/smtpd.rst:196
msgid ""
"Accepts the \"RCPT TO:\" syntax and stores the supplied addresses in the :"
"attr:`rcpttos` list."
msgstr ""

#: ../../../library/smtpd.rst:198
msgid "RSET"
msgstr ""

#: ../../../library/smtpd.rst:198
msgid ""
"Resets the :attr:`mailfrom`, :attr:`rcpttos`, and :attr:`received_data`, but "
"not the greeting."
msgstr ""

#: ../../../library/smtpd.rst:200
msgid "DATA"
msgstr ""

#: ../../../library/smtpd.rst:200
msgid ""
"Sets the internal state to :attr:`DATA` and stores remaining lines from the "
"client in :attr:`received_data` until the terminator ``\"\\r\\n.\\r\\n\"`` "
"is received."
msgstr ""

#: ../../../library/smtpd.rst:203
msgid "HELP"
msgstr ""

#: ../../../library/smtpd.rst:203
msgid "Returns minimal information on command syntax"
msgstr ""

#: ../../../library/smtpd.rst:204
msgid "VRFY"
msgstr ""

#: ../../../library/smtpd.rst:204
msgid "Returns code 252 (the server doesn't know if the address is valid)"
msgstr ""

#: ../../../library/smtpd.rst:205
msgid "EXPN"
msgstr ""

#: ../../../library/smtpd.rst:205
msgid "Reports that the command is not implemented."
msgstr ""
