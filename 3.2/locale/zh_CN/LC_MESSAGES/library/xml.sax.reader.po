# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-10 15:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/xml.sax.reader.rst:2
msgid ":mod:`xml.sax.xmlreader` --- Interface for XML parsers"
msgstr ""

#: ../../../library/xml.sax.reader.rst:10
msgid ""
"SAX parsers implement the :class:`XMLReader` interface. They are implemented "
"in a Python module, which must provide a function :func:`create_parser`. "
"This function is invoked by  :func:`xml.sax.make_parser` with no arguments "
"to create a new  parser object."
msgstr ""

#: ../../../library/xml.sax.reader.rst:18
msgid "Base class which can be inherited by SAX parsers."
msgstr ""

#: ../../../library/xml.sax.reader.rst:23
msgid ""
"In some cases, it is desirable not to parse an input source at once, but to "
"feed chunks of the document as they get available. Note that the reader will "
"normally not read the entire file, but read it in chunks as well; still :"
"meth:`parse` won't return until the entire document is processed. So these "
"interfaces should be used if the blocking behaviour of :meth:`parse` is not "
"desirable."
msgstr ""

#: ../../../library/xml.sax.reader.rst:29
msgid ""
"When the parser is instantiated it is ready to begin accepting data from the "
"feed method immediately. After parsing has been finished with a call to "
"close the reset method must be called to make the parser ready to accept new "
"data, either from feed or using the parse method."
msgstr ""

#: ../../../library/xml.sax.reader.rst:34
msgid ""
"Note that these methods must *not* be called during parsing, that is, after "
"parse has been called and before it returns."
msgstr ""

#: ../../../library/xml.sax.reader.rst:37
msgid ""
"By default, the class also implements the parse method of the XMLReader "
"interface using the feed, close and reset methods of the IncrementalParser "
"interface as a convenience to SAX 2.0 driver writers."
msgstr ""

#: ../../../library/xml.sax.reader.rst:44
msgid ""
"Interface for associating a SAX event with a document location. A locator "
"object will return valid results only during calls to DocumentHandler "
"methods; at any other time, the results are unpredictable. If information is "
"not available, methods may return ``None``."
msgstr ""

#: ../../../library/xml.sax.reader.rst:52
msgid ""
"Encapsulation of the information needed by the :class:`XMLReader` to read "
"entities."
msgstr ""

#: ../../../library/xml.sax.reader.rst:55
msgid ""
"This class may include information about the public identifier, system "
"identifier, byte stream (possibly with character encoding information) and/"
"or the character stream of an entity."
msgstr ""

#: ../../../library/xml.sax.reader.rst:59
msgid ""
"Applications will create objects of this class for use in the :meth:"
"`XMLReader.parse` method and for returning from EntityResolver.resolveEntity."
msgstr ""

#: ../../../library/xml.sax.reader.rst:63
msgid ""
"An :class:`InputSource` belongs to the application, the :class:`XMLReader` "
"is not allowed to modify :class:`InputSource` objects passed to it from the "
"application, although it may make copies and modify those."
msgstr ""

#: ../../../library/xml.sax.reader.rst:70
msgid ""
"This is an implementation of the :class:`Attributes` interface (see section :"
"ref:`attributes-objects`).  This is a dictionary-like object which "
"represents the element attributes in a :meth:`startElement` call. In "
"addition to the most useful dictionary operations, it supports a number of "
"other methods as described by the interface. Objects of this class should be "
"instantiated by readers; *attrs* must be a dictionary-like object containing "
"a mapping from attribute names to attribute values."
msgstr ""

#: ../../../library/xml.sax.reader.rst:81
msgid ""
"Namespace-aware variant of :class:`AttributesImpl`, which will be passed to :"
"meth:`startElementNS`. It is derived from :class:`AttributesImpl`, but "
"understands attribute names as two-tuples of *namespaceURI* and *localname*. "
"In addition, it provides a number of methods expecting qualified names as "
"they appear in the original document.  This class implements the :class:"
"`AttributesNS` interface (see section :ref:`attributes-ns-objects`)."
msgstr ""

#: ../../../library/xml.sax.reader.rst:92
msgid "XMLReader Objects"
msgstr ""

#: ../../../library/xml.sax.reader.rst:94
msgid "The :class:`XMLReader` interface supports the following methods:"
msgstr ""

#: ../../../library/xml.sax.reader.rst:99
msgid ""
"Process an input source, producing SAX events. The *source* object can be a "
"system identifier (a string identifying the input source -- typically a file "
"name or an URL), a file-like object, or an :class:`InputSource` object. "
"When :meth:`parse` returns, the input is completely processed, and the "
"parser object can be discarded or reset. As a limitation, the current "
"implementation only accepts byte streams; processing of character streams is "
"for further study."
msgstr ""

#: ../../../library/xml.sax.reader.rst:109
msgid "Return the current :class:`ContentHandler`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:114
msgid ""
"Set the current :class:`ContentHandler`.  If no :class:`ContentHandler` is "
"set, content events will be discarded."
msgstr ""

#: ../../../library/xml.sax.reader.rst:120
msgid "Return the current :class:`DTDHandler`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:125
msgid ""
"Set the current :class:`DTDHandler`.  If no :class:`DTDHandler` is set, DTD "
"events will be discarded."
msgstr ""

#: ../../../library/xml.sax.reader.rst:131
msgid "Return the current :class:`EntityResolver`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:136
msgid ""
"Set the current :class:`EntityResolver`.  If no :class:`EntityResolver` is "
"set, attempts to resolve an external entity will result in opening the "
"system identifier for the entity, and fail if it is not available."
msgstr ""

#: ../../../library/xml.sax.reader.rst:143
msgid "Return the current :class:`ErrorHandler`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:148
msgid ""
"Set the current error handler.  If no :class:`ErrorHandler` is set, errors "
"will be raised as exceptions, and warnings will be printed."
msgstr ""

#: ../../../library/xml.sax.reader.rst:154
msgid "Allow an application to set the locale for errors and warnings."
msgstr ""

#: ../../../library/xml.sax.reader.rst:156
msgid ""
"SAX parsers are not required to provide localization for errors and "
"warnings; if they cannot support the requested locale, however, they must "
"raise a SAX exception.  Applications may request a locale change in the "
"middle of a parse."
msgstr ""

#: ../../../library/xml.sax.reader.rst:163
msgid ""
"Return the current setting for feature *featurename*.  If the feature is not "
"recognized, :exc:`SAXNotRecognizedException` is raised. The well-known "
"featurenames are listed in the module :mod:`xml.sax.handler`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:170
msgid ""
"Set the *featurename* to *value*. If the feature is not recognized, :exc:"
"`SAXNotRecognizedException` is raised. If the feature or its setting is not "
"supported by the parser, *SAXNotSupportedException* is raised."
msgstr ""

#: ../../../library/xml.sax.reader.rst:177
msgid ""
"Return the current setting for property *propertyname*. If the property is "
"not recognized, a :exc:`SAXNotRecognizedException` is raised. The well-known "
"propertynames are listed in the module :mod:`xml.sax.handler`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:184
msgid ""
"Set the *propertyname* to *value*. If the property is not recognized, :exc:"
"`SAXNotRecognizedException` is raised. If the property or its setting is not "
"supported by the parser, *SAXNotSupportedException* is raised."
msgstr ""

#: ../../../library/xml.sax.reader.rst:192
msgid "IncrementalParser Objects"
msgstr ""

#: ../../../library/xml.sax.reader.rst:194
msgid ""
"Instances of :class:`IncrementalParser` offer the following additional "
"methods:"
msgstr ""

#: ../../../library/xml.sax.reader.rst:199
msgid "Process a chunk of *data*."
msgstr ""

#: ../../../library/xml.sax.reader.rst:204
msgid ""
"Assume the end of the document. That will check well-formedness conditions "
"that can be checked only at the end, invoke handlers, and may clean up "
"resources allocated during parsing."
msgstr ""

#: ../../../library/xml.sax.reader.rst:211
msgid ""
"This method is called after close has been called to reset the parser so "
"that it is ready to parse new documents. The results of calling parse or "
"feed after close without calling reset are undefined."
msgstr ""

#: ../../../library/xml.sax.reader.rst:219
msgid "Locator Objects"
msgstr ""

#: ../../../library/xml.sax.reader.rst:221
msgid "Instances of :class:`Locator` provide these methods:"
msgstr ""

#: ../../../library/xml.sax.reader.rst:226
msgid "Return the column number where the current event ends."
msgstr ""

#: ../../../library/xml.sax.reader.rst:231
msgid "Return the line number where the current event ends."
msgstr ""

#: ../../../library/xml.sax.reader.rst:236
msgid "Return the public identifier for the current event."
msgstr ""

#: ../../../library/xml.sax.reader.rst:241
msgid "Return the system identifier for the current event."
msgstr ""

#: ../../../library/xml.sax.reader.rst:247
msgid "InputSource Objects"
msgstr ""

#: ../../../library/xml.sax.reader.rst:252
msgid "Sets the public identifier of this :class:`InputSource`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:257
msgid "Returns the public identifier of this :class:`InputSource`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:262
msgid "Sets the system identifier of this :class:`InputSource`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:267
msgid "Returns the system identifier of this :class:`InputSource`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:272
msgid "Sets the character encoding of this :class:`InputSource`."
msgstr ""

#: ../../../library/xml.sax.reader.rst:274
msgid ""
"The encoding must be a string acceptable for an XML encoding declaration "
"(see section 4.3.3 of the XML recommendation)."
msgstr ""

#: ../../../library/xml.sax.reader.rst:277
msgid ""
"The encoding attribute of the :class:`InputSource` is ignored if the :class:"
"`InputSource` also contains a character stream."
msgstr ""

#: ../../../library/xml.sax.reader.rst:283
msgid "Get the character encoding of this InputSource."
msgstr ""

#: ../../../library/xml.sax.reader.rst:288
msgid ""
"Set the byte stream (a Python file-like object which does not perform byte-"
"to-character conversion) for this input source."
msgstr ""

#: ../../../library/xml.sax.reader.rst:291
msgid ""
"The SAX parser will ignore this if there is also a character stream "
"specified, but it will use a byte stream in preference to opening a URI "
"connection itself."
msgstr ""

#: ../../../library/xml.sax.reader.rst:294
msgid ""
"If the application knows the character encoding of the byte stream, it "
"should set it with the setEncoding method."
msgstr ""

#: ../../../library/xml.sax.reader.rst:300
msgid "Get the byte stream for this input source."
msgstr ""

#: ../../../library/xml.sax.reader.rst:302
msgid ""
"The getEncoding method will return the character encoding for this byte "
"stream, or None if unknown."
msgstr ""

#: ../../../library/xml.sax.reader.rst:308
msgid ""
"Set the character stream for this input source. (The stream must be a Python "
"1.6 Unicode-wrapped file-like that performs conversion to strings.)"
msgstr ""

#: ../../../library/xml.sax.reader.rst:311
msgid ""
"If there is a character stream specified, the SAX parser will ignore any "
"byte stream and will not attempt to open a URI connection to the system "
"identifier."
msgstr ""

#: ../../../library/xml.sax.reader.rst:317
msgid "Get the character stream for this input source."
msgstr ""

#: ../../../library/xml.sax.reader.rst:323
msgid "The :class:`Attributes` Interface"
msgstr ""

#: ../../../library/xml.sax.reader.rst:325
msgid ""
":class:`Attributes` objects implement a portion of the mapping protocol, "
"including the methods :meth:`copy`, :meth:`get`, :meth:`__contains__`, :meth:"
"`items`, :meth:`keys`, and :meth:`values`.  The following methods are also "
"provided:"
msgstr ""

#: ../../../library/xml.sax.reader.rst:333
msgid "Return the number of attributes."
msgstr ""

#: ../../../library/xml.sax.reader.rst:338
msgid "Return the names of the attributes."
msgstr ""

#: ../../../library/xml.sax.reader.rst:343
msgid ""
"Returns the type of the attribute *name*, which is normally ``'CDATA'``."
msgstr ""

#: ../../../library/xml.sax.reader.rst:348
msgid "Return the value of attribute *name*."
msgstr ""

#: ../../../library/xml.sax.reader.rst:357
msgid "The :class:`AttributesNS` Interface"
msgstr ""

#: ../../../library/xml.sax.reader.rst:359
msgid ""
"This interface is a subtype of the :class:`Attributes` interface (see "
"section :ref:`attributes-objects`).  All methods supported by that interface "
"are also available on :class:`AttributesNS` objects."
msgstr ""

#: ../../../library/xml.sax.reader.rst:363
msgid "The following methods are also available:"
msgstr ""

#: ../../../library/xml.sax.reader.rst:368
msgid "Return the value for a qualified name."
msgstr ""

#: ../../../library/xml.sax.reader.rst:373
msgid "Return the ``(namespace, localname)`` pair for a qualified *name*."
msgstr ""

#: ../../../library/xml.sax.reader.rst:378
msgid "Return the qualified name for a ``(namespace, localname)`` pair."
msgstr ""

#: ../../../library/xml.sax.reader.rst:383
msgid "Return the qualified names of all attributes."
msgstr ""
