# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-10 15:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../c-api/bytes.rst:6
msgid "Bytes Objects"
msgstr ""

#: ../../../c-api/bytes.rst:8
msgid ""
"These functions raise :exc:`TypeError` when expecting a bytes parameter and "
"are called with a non-bytes parameter."
msgstr ""

#: ../../../c-api/bytes.rst:16
msgid "This subtype of :c:type:`PyObject` represents a Python bytes object."
msgstr ""

#: ../../../c-api/bytes.rst:21
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python bytes type; it "
"is the same object as :class:`bytes` in the Python layer."
msgstr ""

#: ../../../c-api/bytes.rst:27
msgid ""
"Return true if the object *o* is a bytes object or an instance of a subtype "
"of the bytes type."
msgstr ""

#: ../../../c-api/bytes.rst:33
msgid ""
"Return true if the object *o* is a bytes object, but not an instance of a "
"subtype of the bytes type."
msgstr ""

#: ../../../c-api/bytes.rst:39
msgid ""
"Return a new bytes object with a copy of the string *v* as value on success, "
"and *NULL* on failure.  The parameter *v* must not be *NULL*; it will not be "
"checked."
msgstr ""

#: ../../../c-api/bytes.rst:46
msgid ""
"Return a new bytes object with a copy of the string *v* as value and length "
"*len* on success, and *NULL* on failure.  If *v* is *NULL*, the contents of "
"the bytes object are uninitialized."
msgstr ""

#: ../../../c-api/bytes.rst:53
msgid ""
"Take a C :c:func:`printf`\\ -style *format* string and a variable number of "
"arguments, calculate the size of the resulting Python bytes object and "
"return a bytes object with the values formatted into it.  The variable "
"arguments must be C types and must correspond exactly to the format "
"characters in the *format* string.  The following format characters are "
"allowed:"
msgstr ""

#: ../../../c-api/bytes.rst:66
msgid "Format Characters"
msgstr ""

#: ../../../c-api/bytes.rst:66
msgid "Type"
msgstr ""

#: ../../../c-api/bytes.rst:66
msgid "Comment"
msgstr ""

#: ../../../c-api/bytes.rst:68
msgid ":attr:`%%`"
msgstr ""

#: ../../../c-api/bytes.rst:68
msgid "*n/a*"
msgstr ""

#: ../../../c-api/bytes.rst:68
msgid "The literal % character."
msgstr ""

#: ../../../c-api/bytes.rst:70
msgid ":attr:`%c`"
msgstr ""

#: ../../../c-api/bytes.rst:70 ../../../c-api/bytes.rst:73
#: ../../../c-api/bytes.rst:91 ../../../c-api/bytes.rst:94
msgid "int"
msgstr ""

#: ../../../c-api/bytes.rst:70
msgid "A single character, represented as an C int."
msgstr ""

#: ../../../c-api/bytes.rst:73
msgid ":attr:`%d`"
msgstr ""

#: ../../../c-api/bytes.rst:73
msgid "Exactly equivalent to ``printf(\"%d\")``."
msgstr ""

#: ../../../c-api/bytes.rst:76
msgid ":attr:`%u`"
msgstr ""

#: ../../../c-api/bytes.rst:76
msgid "unsigned int"
msgstr ""

#: ../../../c-api/bytes.rst:76
msgid "Exactly equivalent to ``printf(\"%u\")``."
msgstr ""

#: ../../../c-api/bytes.rst:79
msgid ":attr:`%ld`"
msgstr ""

#: ../../../c-api/bytes.rst:79
msgid "long"
msgstr ""

#: ../../../c-api/bytes.rst:79
msgid "Exactly equivalent to ``printf(\"%ld\")``."
msgstr ""

#: ../../../c-api/bytes.rst:82
msgid ":attr:`%lu`"
msgstr ""

#: ../../../c-api/bytes.rst:82
msgid "unsigned long"
msgstr ""

#: ../../../c-api/bytes.rst:82
msgid "Exactly equivalent to ``printf(\"%lu\")``."
msgstr ""

#: ../../../c-api/bytes.rst:85
msgid ":attr:`%zd`"
msgstr ""

#: ../../../c-api/bytes.rst:85
msgid "Py_ssize_t"
msgstr ""

#: ../../../c-api/bytes.rst:85
msgid "Exactly equivalent to ``printf(\"%zd\")``."
msgstr ""

#: ../../../c-api/bytes.rst:88
msgid ":attr:`%zu`"
msgstr ""

#: ../../../c-api/bytes.rst:88
msgid "size_t"
msgstr ""

#: ../../../c-api/bytes.rst:88
msgid "Exactly equivalent to ``printf(\"%zu\")``."
msgstr ""

#: ../../../c-api/bytes.rst:91
msgid ":attr:`%i`"
msgstr ""

#: ../../../c-api/bytes.rst:91
msgid "Exactly equivalent to ``printf(\"%i\")``."
msgstr ""

#: ../../../c-api/bytes.rst:94
msgid ":attr:`%x`"
msgstr ""

#: ../../../c-api/bytes.rst:94
msgid "Exactly equivalent to ``printf(\"%x\")``."
msgstr ""

#: ../../../c-api/bytes.rst:97
msgid ":attr:`%s`"
msgstr ""

#: ../../../c-api/bytes.rst:97
msgid "char\\*"
msgstr ""

#: ../../../c-api/bytes.rst:97
msgid "A null-terminated C character array."
msgstr ""

#: ../../../c-api/bytes.rst:100
msgid ":attr:`%p`"
msgstr ""

#: ../../../c-api/bytes.rst:100
msgid "void\\*"
msgstr ""

#: ../../../c-api/bytes.rst:100
msgid ""
"The hex representation of a C pointer. Mostly equivalent to "
"``printf(\"%p\")`` except that it is guaranteed to start with the literal "
"``0x`` regardless of what the platform's ``printf`` yields."
msgstr ""

#: ../../../c-api/bytes.rst:109
msgid ""
"An unrecognized format character causes all the rest of the format string to "
"be copied as-is to the result string, and any extra arguments discarded."
msgstr ""

#: ../../../c-api/bytes.rst:115
msgid ""
"Identical to :c:func:`PyBytes_FromFormat` except that it takes exactly two "
"arguments."
msgstr ""

#: ../../../c-api/bytes.rst:121
msgid ""
"Return the bytes representation of object *o* that implements the buffer "
"protocol."
msgstr ""

#: ../../../c-api/bytes.rst:127
msgid "Return the length of the bytes in bytes object *o*."
msgstr ""

#: ../../../c-api/bytes.rst:132
msgid "Macro form of :c:func:`PyBytes_Size` but without error checking."
msgstr ""

#: ../../../c-api/bytes.rst:137
msgid ""
"Return a NUL-terminated representation of the contents of *o*.  The pointer "
"refers to the internal buffer of *o*, not a copy.  The data must not be "
"modified in any way, unless the string was just created using "
"``PyBytes_FromStringAndSize(NULL, size)``. It must not be deallocated.  If "
"*o* is not a string object at all, :c:func:`PyBytes_AsString` returns *NULL* "
"and raises :exc:`TypeError`."
msgstr ""

#: ../../../c-api/bytes.rst:147
msgid "Macro form of :c:func:`PyBytes_AsString` but without error checking."
msgstr ""

#: ../../../c-api/bytes.rst:152
msgid ""
"Return a NUL-terminated representation of the contents of the object *obj* "
"through the output variables *buffer* and *length*."
msgstr ""

#: ../../../c-api/bytes.rst:155
msgid ""
"If *length* is *NULL*, the resulting buffer may not contain NUL characters; "
"if it does, the function returns ``-1`` and a :exc:`TypeError` is raised."
msgstr ""

#: ../../../c-api/bytes.rst:158
msgid ""
"The buffer refers to an internal string buffer of *obj*, not a copy. The "
"data must not be modified in any way, unless the string was just created "
"using ``PyBytes_FromStringAndSize(NULL, size)``.  It must not be "
"deallocated.  If *string* is not a string object at all, :c:func:"
"`PyBytes_AsStringAndSize` returns ``-1`` and raises :exc:`TypeError`."
msgstr ""

#: ../../../c-api/bytes.rst:167
msgid ""
"Create a new bytes object in *\\*bytes* containing the contents of *newpart* "
"appended to *bytes*; the caller will own the new reference.  The reference "
"to the old value of *bytes* will be stolen.  If the new string cannot be "
"created, the old reference to *bytes* will still be discarded and the value "
"of *\\*bytes* will be set to *NULL*; the appropriate exception will be set."
msgstr ""

#: ../../../c-api/bytes.rst:176
msgid ""
"Create a new string object in *\\*bytes* containing the contents of "
"*newpart* appended to *bytes*.  This version decrements the reference count "
"of *newpart*."
msgstr ""

#: ../../../c-api/bytes.rst:183
msgid ""
"A way to resize a bytes object even though it is \"immutable\". Only use "
"this to build up a brand new bytes object; don't use this if the bytes may "
"already be known in other parts of the code.  It is an error to call this "
"function if the refcount on the input bytes object is not one. Pass the "
"address of an existing bytes object as an lvalue (it may be written into), "
"and the new size desired.  On success, *\\*bytes* holds the resized bytes "
"object and ``0`` is returned; the address in *\\*bytes* may differ from its "
"input value.  If the reallocation fails, the original bytes object at "
"*\\*bytes* is deallocated, *\\*bytes* is set to *NULL*, a memory exception "
"is set, and ``-1`` is returned."
msgstr ""

#: ../../../c-api/bytes.rst:11
msgid "bytes"
msgstr ""
