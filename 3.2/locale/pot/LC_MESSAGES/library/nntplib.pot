# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-10 15:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/nntplib.rst:3
msgid ":mod:`nntplib` --- NNTP protocol client"
msgstr ""

#: ../../../library/nntplib.rst:13
msgid "**Source code:** :source:`Lib/nntplib.py`"
msgstr ""

#: ../../../library/nntplib.rst:17
msgid ""
"This module defines the class :class:`NNTP` which implements the client side "
"of the Network News Transfer Protocol.  It can be used to implement a news "
"reader or poster, or automated news processors.  It is compatible with :rfc:"
"`3977` as well as the older :rfc:`977` and :rfc:`2980`."
msgstr ""

#: ../../../library/nntplib.rst:22
msgid ""
"Here are two small examples of how it can be used.  To list some statistics "
"about a newsgroup and print the subjects of the last 10 articles::"
msgstr ""

#: ../../../library/nntplib.rst:25
msgid ""
">>> s = nntplib.NNTP('news.gmane.org')\n"
">>> resp, count, first, last, name = s.group('gmane.comp.python."
"committers')\n"
">>> print('Group', name, 'has', count, 'articles, range', first, 'to', "
"last)\n"
"Group gmane.comp.python.committers has 1096 articles, range 1 to 1096\n"
">>> resp, overviews = s.over((last - 9, last))\n"
">>> for id, over in overviews:\n"
"...     print(id, nntplib.decode_header(over['subject']))\n"
"...\n"
"1087 Re: Commit privileges for Łukasz Langa\n"
"1088 Re: 3.2 alpha 2 freeze\n"
"1089 Re: 3.2 alpha 2 freeze\n"
"1090 Re: Commit privileges for Łukasz Langa\n"
"1091 Re: Commit privileges for Łukasz Langa\n"
"1092 Updated ssh key\n"
"1093 Re: Updated ssh key\n"
"1094 Re: Updated ssh key\n"
"1095 Hello fellow committers!\n"
"1096 Re: Hello fellow committers!\n"
">>> s.quit()\n"
"'205 Bye!'"
msgstr ""

#: ../../../library/nntplib.rst:46
msgid ""
"To post an article from a binary file (this assumes that the article has "
"valid headers, and that you have right to post on the particular newsgroup)::"
msgstr ""

#: ../../../library/nntplib.rst:49
msgid ""
">>> s = nntplib.NNTP('news.gmane.org')\n"
">>> f = open('article.txt', 'rb')\n"
">>> s.post(f)\n"
"'240 Article posted successfully.'\n"
">>> s.quit()\n"
"'205 Bye!'"
msgstr ""

#: ../../../library/nntplib.rst:56
msgid "The module itself defines the following classes:"
msgstr ""

#: ../../../library/nntplib.rst:61
msgid ""
"Return a new :class:`NNTP` object, representing a connection to the NNTP "
"server running on host *host*, listening at port *port*. An optional "
"*timeout* can be specified for the socket connection. If the optional *user* "
"and *password* are provided, or if suitable credentials are present in :file:"
"`/.netrc` and the optional flag *usenetrc* is true, the ``AUTHINFO USER`` "
"and ``AUTHINFO PASS`` commands are used to identify and authenticate the "
"user to the server.  If the optional flag *readermode* is true, then a "
"``mode reader`` command is sent before authentication is performed.  Reader "
"mode is sometimes necessary if you are connecting to an NNTP server on the "
"local machine and intend to call reader-specific commands, such as "
"``group``.  If you get unexpected :exc:`NNTPPermanentError`\\ s, you might "
"need to set *readermode*."
msgstr ""

#: ../../../library/nntplib.rst:74
msgid "*usenetrc* is now False by default."
msgstr ""

#: ../../../library/nntplib.rst:80
msgid ""
"Return a new :class:`NNTP_SSL` object, representing an encrypted connection "
"to the NNTP server running on host *host*, listening at port *port*.  :class:"
"`NNTP_SSL` objects have the same methods as :class:`NNTP` objects.  If "
"*port* is omitted, port 563 (NNTPS) is used. *ssl_context* is also optional, "
"and is a :class:`~ssl.SSLContext` object. All other parameters behave the "
"same as for :class:`NNTP`."
msgstr ""

#: ../../../library/nntplib.rst:87
msgid ""
"Note that SSL-on-563 is discouraged per :rfc:`4642`, in favor of STARTTLS as "
"described below.  However, some servers only support the former."
msgstr ""

#: ../../../library/nntplib.rst:96
msgid ""
"Derived from the standard exception :exc:`Exception`, this is the base class "
"for all exceptions raised by the :mod:`nntplib` module.  Instances of this "
"class have the following attribute:"
msgstr ""

#: ../../../library/nntplib.rst:102
msgid "The response of the server if available, as a :class:`str` object."
msgstr ""

#: ../../../library/nntplib.rst:107
msgid "Exception raised when an unexpected reply is received from the server."
msgstr ""

#: ../../../library/nntplib.rst:112
msgid ""
"Exception raised when a response code in the range 400--499 is received."
msgstr ""

#: ../../../library/nntplib.rst:117
msgid ""
"Exception raised when a response code in the range 500--599 is received."
msgstr ""

#: ../../../library/nntplib.rst:122
msgid ""
"Exception raised when a reply is received from the server that does not "
"begin with a digit in the range 1--5."
msgstr ""

#: ../../../library/nntplib.rst:128
msgid "Exception raised when there is some error in the response data."
msgstr ""

#: ../../../library/nntplib.rst:134
msgid "NNTP Objects"
msgstr ""

#: ../../../library/nntplib.rst:136
msgid ""
"When connected, :class:`NNTP` and :class:`NNTP_SSL` objects support the "
"following methods and attributes."
msgstr ""

#: ../../../library/nntplib.rst:140
msgid "Attributes"
msgstr ""

#: ../../../library/nntplib.rst:144
msgid ""
"An integer representing the version of the NNTP protocol supported by the "
"server.  In practice, this should be ``2`` for servers advertising :rfc:"
"`3977` compliance and ``1`` for others."
msgstr ""

#: ../../../library/nntplib.rst:152
msgid ""
"A string describing the software name and version of the NNTP server, or :"
"const:`None` if not advertised by the server."
msgstr ""

#: ../../../library/nntplib.rst:158
msgid "Methods"
msgstr ""

#: ../../../library/nntplib.rst:160
msgid ""
"The *response* that is returned as the first item in the return tuple of "
"almost all methods is the server's response: a string beginning with a three-"
"digit code.  If the server's response indicates an error, the method raises "
"one of the above exceptions."
msgstr ""

#: ../../../library/nntplib.rst:165
msgid ""
"Many of the following methods take an optional keyword-only argument *file*. "
"When the *file* argument is supplied, it must be either a :term:`file "
"object` opened for binary writing, or the name of an on-disk file to be "
"written to. The method will then write any data returned by the server "
"(except for the response line and the terminating dot) to the file; any list "
"of lines, tuples or objects that the method normally returns will be empty."
msgstr ""

#: ../../../library/nntplib.rst:172
msgid ""
"Many of the following methods have been reworked and fixed, which makes them "
"incompatible with their 3.1 counterparts."
msgstr ""

#: ../../../library/nntplib.rst:179
msgid ""
"Send a ``QUIT`` command and close the connection.  Once this method has been "
"called, no other methods of the NNTP object should be called."
msgstr ""

#: ../../../library/nntplib.rst:185
msgid ""
"Return the welcome message sent by the server in reply to the initial "
"connection.  (This message sometimes contains disclaimers or help "
"information that may be relevant to the user.)"
msgstr ""

#: ../../../library/nntplib.rst:192
msgid ""
"Return the :rfc:`3977` capabilities advertised by the server, as a :class:"
"`dict` instance mapping capability names to (possibly empty) lists of "
"values. On legacy servers which don't understand the ``CAPABILITIES`` "
"command, an empty dictionary is returned instead."
msgstr ""

#: ../../../library/nntplib.rst:206
msgid ""
"Send ``AUTHINFO`` commands with the user name and password.  If *user* and "
"*password* are None and *usenetrc* is True, credentials from ``~/.netrc`` "
"will be used if possible."
msgstr ""

#: ../../../library/nntplib.rst:210
msgid ""
"Unless intentionally delayed, login is normally performed during the :class:"
"`NNTP` object initialization and separately calling this function is "
"unnecessary.  To force authentication to be delayed, you must not set *user* "
"or *password* when creating the object, and must set *usenetrc* to False."
msgstr ""

#: ../../../library/nntplib.rst:221
msgid ""
"Send a ``STARTTLS`` command.  The *ssl_context* argument is optional and "
"should be a :class:`ssl.SSLContext` object.  This will enable encryption on "
"the NNTP connection."
msgstr ""

#: ../../../library/nntplib.rst:225
msgid ""
"Note that this may not be done after authentication information has been "
"transmitted, and authentication occurs by default if possible during a :"
"class:`NNTP` object initialization.  See :meth:`NNTP.login` for information "
"on suppressing this behavior."
msgstr ""

#: ../../../library/nntplib.rst:235
msgid ""
"Send a ``NEWGROUPS`` command.  The *date* argument should be a :class:"
"`datetime.date` or :class:`datetime.datetime` object. Return a pair "
"``(response, groups)`` where *groups* is a list representing the groups that "
"are new since the given *date*. If *file* is supplied, though, then *groups* "
"will be empty."
msgstr ""

#: ../../../library/nntplib.rst:251
msgid ""
"Send a ``NEWNEWS`` command.  Here, *group* is a group name or ``'*'``, and "
"*date* has the same meaning as for :meth:`newgroups`.  Return a pair "
"``(response, articles)`` where *articles* is a list of message ids."
msgstr ""

#: ../../../library/nntplib.rst:255
msgid "This command is frequently disabled by NNTP server administrators."
msgstr ""

#: ../../../library/nntplib.rst:260
msgid ""
"Send a ``LIST`` or ``LIST ACTIVE`` command.  Return a pair ``(response, "
"list)`` where *list* is a list of tuples representing all the groups "
"available from this NNTP server, optionally matching the pattern string "
"*group_pattern*.  Each tuple has the form ``(group, last, first, flag)``, "
"where *group* is a group name, *last* and *first* are the last and first "
"article numbers, and *flag* usually takes one of these values:"
msgstr ""

#: ../../../library/nntplib.rst:268
msgid "``y``: Local postings and articles from peers are allowed."
msgstr ""

#: ../../../library/nntplib.rst:269
msgid "``m``: The group is moderated and all postings must be approved."
msgstr ""

#: ../../../library/nntplib.rst:270
msgid "``n``: No local postings are allowed, only articles from peers."
msgstr ""

#: ../../../library/nntplib.rst:271
msgid "``j``: Articles from peers are filed in the junk group instead."
msgstr ""

#: ../../../library/nntplib.rst:272
msgid "``x``: No local postings, and articles from peers are ignored."
msgstr ""

#: ../../../library/nntplib.rst:273
msgid "``=foo.bar``: Articles are filed in the ``foo.bar`` group instead."
msgstr ""

#: ../../../library/nntplib.rst:275
msgid ""
"If *flag* has another value, then the status of the newsgroup should be "
"considered unknown."
msgstr ""

#: ../../../library/nntplib.rst:278
msgid ""
"This command can return very large results, especially if *group_pattern* is "
"not specified.  It is best to cache the results offline unless you really "
"need to refresh them."
msgstr ""

#: ../../../library/nntplib.rst:282
msgid "*group_pattern* was added."
msgstr ""

#: ../../../library/nntplib.rst:288
msgid ""
"Send a ``LIST NEWSGROUPS`` command, where *grouppattern* is a wildmat string "
"as specified in :rfc:`3977` (it's essentially the same as DOS or UNIX shell "
"wildcard strings).  Return a pair ``(response, descriptions)``, where "
"*descriptions* is a dictionary mapping group names to textual descriptions."
msgstr ""

#: ../../../library/nntplib.rst:302
msgid ""
"Get a description for a single group *group*.  If more than one group "
"matches (if 'group' is a real wildmat string), return the first match.   If "
"no group matches, return an empty string."
msgstr ""

#: ../../../library/nntplib.rst:306
msgid ""
"This elides the response code from the server.  If the response code is "
"needed, use :meth:`descriptions`."
msgstr ""

#: ../../../library/nntplib.rst:312
msgid ""
"Send a ``GROUP`` command, where *name* is the group name.  The group is "
"selected as the current group, if it exists.  Return a tuple ``(response, "
"count, first, last, name)`` where *count* is the (estimated) number of "
"articles in the group, *first* is the first article number in the group, "
"*last* is the last article number in the group, and *name* is the group name."
msgstr ""

#: ../../../library/nntplib.rst:322
msgid ""
"Send a ``OVER`` command, or a ``XOVER`` command on legacy servers. "
"*message_spec* can be either a string representing a message id, or a "
"``(first, last)`` tuple of numbers indicating a range of articles in the "
"current group, or a ``(first, None)`` tuple indicating a range of articles "
"starting from *first* to the last article in the current group, or :const:"
"`None` to select the current article in the current group."
msgstr ""

#: ../../../library/nntplib.rst:329
msgid ""
"Return a pair ``(response, overviews)``.  *overviews* is a list of "
"``(article_number, overview)`` tuples, one for each article selected by "
"*message_spec*.  Each *overview* is a dictionary with the same number of "
"items, but this number depends on the server.  These items are either "
"message headers (the key is then the lower-cased header name) or metadata "
"items (the key is then the metadata name prepended with ``\":\"``).  The "
"following items are guaranteed to be present by the NNTP specification:"
msgstr ""

#: ../../../library/nntplib.rst:337
msgid ""
"the ``subject``, ``from``, ``date``, ``message-id`` and ``references`` "
"headers"
msgstr ""

#: ../../../library/nntplib.rst:339
msgid ""
"the ``:bytes`` metadata: the number of bytes in the entire raw article "
"(including headers and body)"
msgstr ""

#: ../../../library/nntplib.rst:341
msgid "the ``:lines`` metadata: the number of lines in the article body"
msgstr ""

#: ../../../library/nntplib.rst:343
msgid ""
"The value of each item is either a string, or :const:`None` if not present."
msgstr ""

#: ../../../library/nntplib.rst:345
msgid ""
"It is advisable to use the :func:`decode_header` function on header values "
"when they may contain non-ASCII characters::"
msgstr ""

#: ../../../library/nntplib.rst:348
msgid ""
">>> _, _, first, last, _ = s.group('gmane.comp.python.devel')\n"
">>> resp, overviews = s.over((last, last))\n"
">>> art_num, over = overviews[0]\n"
">>> art_num\n"
"117216\n"
">>> list(over.keys())\n"
"['xref', 'from', ':lines', ':bytes', 'references', 'date', 'message-id', "
"'subject']\n"
">>> over['from']\n"
"'=?UTF-8?B?Ik1hcnRpbiB2LiBMw7Z3aXMi?= <martin@v.loewis.de>'\n"
">>> nntplib.decode_header(over['from'])\n"
"'\"Martin v. Löwis\" <martin@v.loewis.de>'"
msgstr ""

#: ../../../library/nntplib.rst:365
msgid ""
"Send a ``HELP`` command.  Return a pair ``(response, list)`` where *list* is "
"a list of help strings."
msgstr ""

#: ../../../library/nntplib.rst:371
msgid ""
"Send a ``STAT`` command, where *message_spec* is either a message id "
"(enclosed in ``'<'`` and ``'>'``) or an article number in the current group. "
"If *message_spec* is omitted or :const:`None`, the current article in the "
"current group is considered.  Return a triple ``(response, number, id)`` "
"where *number* is the article number and *id* is the message id."
msgstr ""

#: ../../../library/nntplib.rst:385
msgid "Send a ``NEXT`` command.  Return as for :meth:`stat`."
msgstr ""

#: ../../../library/nntplib.rst:390
msgid "Send a ``LAST`` command.  Return as for :meth:`stat`."
msgstr ""

#: ../../../library/nntplib.rst:395
msgid ""
"Send an ``ARTICLE`` command, where *message_spec* has the same meaning as "
"for :meth:`stat`.  Return a tuple ``(response, info)`` where *info* is a :"
"class:`~collections.namedtuple` with three attributes *number*, *message_id* "
"and *lines* (in that order).  *number* is the article number in the group "
"(or 0 if the information is not available), *message_id* the message id as a "
"string, and *lines* a list of lines (without terminating newlines) "
"comprising the raw message including headers and body."
msgstr ""

#: ../../../library/nntplib.rst:420
msgid ""
"Same as :meth:`article()`, but sends a ``HEAD`` command.  The *lines* "
"returned (or written to *file*) will only contain the message headers, not "
"the body."
msgstr ""

#: ../../../library/nntplib.rst:427
msgid ""
"Same as :meth:`article()`, but sends a ``BODY`` command.  The *lines* "
"returned (or written to *file*) will only contain the message body, not the "
"headers."
msgstr ""

#: ../../../library/nntplib.rst:434
msgid ""
"Post an article using the ``POST`` command.  The *data* argument is either "
"a :term:`file object` opened for binary reading, or any iterable of bytes "
"objects (representing raw lines of the article to be posted).  It should "
"represent a well-formed news article, including the required headers.  The :"
"meth:`post` method automatically escapes lines beginning with ``.`` and "
"appends the termination line."
msgstr ""

#: ../../../library/nntplib.rst:441
msgid ""
"If the method succeeds, the server's response is returned.  If the server "
"refuses posting, a :class:`NNTPReplyError` is raised."
msgstr ""

#: ../../../library/nntplib.rst:447
msgid ""
"Send an ``IHAVE`` command. *message_id* is the id of the message to send to "
"the server (enclosed in  ``'<'`` and ``'>'``).  The *data* parameter and the "
"return value are the same as for :meth:`post()`."
msgstr ""

#: ../../../library/nntplib.rst:454
msgid ""
"Return a pair ``(response, date)``.  *date* is a :class:`~datetime.datetime` "
"object containing the current date and time of the server."
msgstr ""

#: ../../../library/nntplib.rst:460
msgid "Send a ``SLAVE`` command.  Return the server's *response*."
msgstr ""

#: ../../../library/nntplib.rst:465
msgid ""
"Set the instance's debugging level.  This controls the amount of debugging "
"output printed.  The default, ``0``, produces no debugging output.  A value "
"of ``1`` produces a moderate amount of debugging output, generally a single "
"line per request or response.  A value of ``2`` or higher produces the "
"maximum amount of debugging output, logging each line sent and received on "
"the connection (including message text)."
msgstr ""

#: ../../../library/nntplib.rst:473
msgid ""
"The following are optional NNTP extensions defined in :rfc:`2980`.  Some of "
"them have been superseded by newer commands in :rfc:`3977`."
msgstr ""

#: ../../../library/nntplib.rst:479
msgid ""
"Send an ``XHDR`` command.  The *hdr* argument is a header keyword, e.g. "
"``'subject'``.  The *str* argument should have the form ``'first-last'`` "
"where *first* and *last* are the first and last article numbers to search. "
"Return a pair ``(response, list)``, where *list* is a list of pairs ``(id, "
"text)``, where *id* is an article number (as a string) and *text* is the "
"text of the requested header for that article. If the *file* parameter is "
"supplied, then the output of the  ``XHDR`` command is stored in a file.  If "
"*file* is a string, then the method will open a file with that name, write "
"to it  then close it. If *file* is a :term:`file object`, then it will start "
"calling :meth:`write` on it to store the lines of the command output. If "
"*file* is supplied, then the returned *list* is an empty list."
msgstr ""

#: ../../../library/nntplib.rst:494
msgid ""
"Send an ``XOVER`` command.  *start* and *end* are article numbers delimiting "
"the range of articles to select.  The return value is the same of for :meth:"
"`over()`.  It is recommended to use :meth:`over()` instead, since it will "
"automatically use the newer ``OVER`` command if available."
msgstr ""

#: ../../../library/nntplib.rst:503
msgid ""
"Return a pair ``(resp, path)``, where *path* is the directory path to the "
"article with message ID *id*.  Most of the time, this extension is not "
"enabled by NNTP server administrators."
msgstr ""

#: ../../../library/nntplib.rst:526
msgid "Utility functions"
msgstr ""

#: ../../../library/nntplib.rst:528
msgid "The module also defines the following utility function:"
msgstr ""

#: ../../../library/nntplib.rst:533
msgid ""
"Decode a header value, un-escaping any escaped non-ASCII characters. "
"*header_str* must be a :class:`str` object.  The unescaped value is "
"returned.  Using this function is recommended to display some headers in a "
"human readable form::"
msgstr ""

#: ../../../library/nntplib.rst:538
msgid ""
">>> decode_header(\"Some subject\")\n"
"'Some subject'\n"
">>> decode_header(\"=?ISO-8859-15?Q?D=E9buter_en_Python?=\")\n"
"'Débuter en Python'\n"
">>> decode_header(\"Re: =?UTF-8?B?cHJvYmzDqG1lIGRlIG1hdHJpY2U=?=\")\n"
"'Re: problème de matrice'"
msgstr ""

#: ../../../library/nntplib.rst:9
msgid "NNTP"
msgstr ""

#: ../../../library/nntplib.rst:9
msgid "protocol"
msgstr ""

#: ../../../library/nntplib.rst:9
msgid "Network News Transfer Protocol"
msgstr ""
