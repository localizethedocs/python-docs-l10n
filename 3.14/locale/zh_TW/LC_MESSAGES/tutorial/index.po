# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 04:41+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../tutorial/index.rst:5
msgid "The Python Tutorial"
msgstr "Python 教學"

#: ../../../tutorial/index.rst:7
msgid ""
"This tutorial is designed for *programmers* that are new to the Python "
"language, **not** *beginners* who are new to programming."
msgstr ""
"這份教學是為了那些對 Python 語言有興趣的\\ *程式設計師*\\ 而設計的，\\ **不是"
"**\\ 對於程式設計\\ *新手*\\ 的入門教學。"

#: ../../../tutorial/index.rst:11
msgid ""
"Python is an easy to learn, powerful programming language. It has efficient "
"high-level data structures and a simple but effective approach to object-"
"oriented programming. Python's elegant syntax and dynamic typing, together "
"with its interpreted nature, make it an ideal language for scripting and "
"rapid application development in many areas on most platforms."
msgstr ""
"Python 是一種易學、功能強大的程式語言。它有高效能的高階資料結構，也有簡單但有"
"效的方法去實現物件導向程式設計。Python 優雅的語法和動態型別，結合其直譯特性，"
"使它成為眾多領域和大多數平臺上，撰寫腳本和快速開發應用程式的理想語言。"

#: ../../../tutorial/index.rst:17
msgid ""
"The Python interpreter and the extensive standard library are freely "
"available in source or binary form for all major platforms from the Python "
"web site, https://www.python.org/, and may be freely distributed. The same "
"site also contains distributions of and pointers to many free third party "
"Python modules, programs and tools, and additional documentation."
msgstr ""
"使用者可以自由且免費地從 Python 官網上 (https://www.python.org/) 取得各大平台"
"上用的 Python 直譯器和標準函式庫，下載其來源碼或二進位形式執行檔，同時，也可"
"以將其自由地散佈。另外，Python 官網也提供了許多自由且免費的第三方 Python 模"
"組、程式與工具、以及額外的文件。"

#: ../../../tutorial/index.rst:23
msgid ""
"The Python interpreter is easily extended with new functions and data types "
"implemented in C or C++ (or other languages callable from C). Python is also "
"suitable as an extension language for customizable applications."
msgstr ""
"使用 C 或 C++（或其他可被 C 呼叫的程式語言），可以很容易在 Python 直譯器內新"
"增函式及資料型別。同時，對可讓使用者自訂功能的應用程式來說，Python 也適合作為"
"其擴充語言 （extension language）。"

#: ../../../tutorial/index.rst:27
msgid ""
"This tutorial introduces the reader informally to the basic concepts and "
"features of the Python language and system. Be aware that it expects you to "
"have a basic understanding of programming in general. It helps to have a "
"Python interpreter handy for hands-on experience, but all examples are self-"
"contained, so the tutorial can be read off-line as well."
msgstr ""
"這份教學將非常規地介紹 Python 語言與系統的基本概念及功能。請注意，它預期你對"
"程式設計有基本的了解。實際用 Python 直譯器進行實際操作將有助於學習，但所有範"
"例都是獨立完整的，所以這份教學也可以離線閱讀。"

#: ../../../tutorial/index.rst:33
msgid ""
"For a description of standard objects and modules, see :ref:`library-"
"index`. :ref:`reference-index` gives a more formal definition of the "
"language.  To write extensions in C or C++, read :ref:`extending-index` and :"
"ref:`c-api-index`. There are also several books covering Python in depth."
msgstr ""

#: ../../../tutorial/index.rst:38
msgid ""
"This tutorial does not attempt to be comprehensive and cover every single "
"feature, or even every commonly used feature. Instead, it introduces many of "
"Python's most noteworthy features, and will give you a good idea of the "
"language's flavor and style. After reading it, you will be able to read and "
"write Python modules and programs, and you will be ready to learn more about "
"the various Python library modules described in :ref:`library-index`."
msgstr ""

#: ../../../tutorial/index.rst:45
msgid "The :ref:`glossary` is also worth going through."
msgstr ""
