# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 04:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/select.rst:2
msgid ":mod:`select` --- Waiting for I/O completion"
msgstr ""

#: ../../../library/select.rst:8
msgid ""
"This module provides access to the :c:func:`select` and :c:func:`poll` "
"functions available in most operating systems, :c:func:`devpoll` available "
"on Solaris and derivatives, :c:func:`epoll` available on Linux 2.5+ and :c:"
"func:`kqueue` available on most BSD. Note that on Windows, it only works for "
"sockets; on other operating systems, it also works for other file types (in "
"particular, on Unix, it works on pipes). It cannot be used on regular files "
"to determine whether a file has grown since it was last read."
msgstr ""

#: ../../../library/select.rst:17
msgid "The module defines the following:"
msgstr ""

#: ../../../library/select.rst:22
msgid "A deprecated alias of :exc:`OSError`."
msgstr ""

#: ../../../library/select.rst:24
msgid "Following :pep:`3151`, this class was made an alias of :exc:`OSError`."
msgstr ""

#: ../../../library/select.rst:30
msgid ""
"(Only supported on Solaris and derivatives.)  Returns a ``/dev/poll`` "
"polling object; see section :ref:`devpoll-objects` below for the methods "
"supported by devpoll objects."
msgstr ""

#: ../../../library/select.rst:34
msgid ""
":c:func:`devpoll` objects are linked to the number of file descriptors "
"allowed at the time of instantiation. If your program reduces this value, :c:"
"func:`devpoll` will fail. If your program increases this value, :c:func:"
"`devpoll` may return an incomplete list of active file descriptors."
msgstr ""

#: ../../../library/select.rst:44
msgid ""
"(Only supported on Linux 2.5.44 and newer.) Return an edge polling object, "
"which can be used as Edge or Level Triggered interface for I/O events. "
"*sizehint* is deprecated and completely ignored. *flags* can be set to :"
"const:`EPOLL_CLOEXEC`, which causes the epoll descriptor to be closed "
"automatically when :func:`os.execve` is called. See section :ref:`epoll-"
"objects` below for the methods supported by epolling objects."
msgstr ""

#: ../../../library/select.rst:52
msgid "Added the *flags* parameter."
msgstr ""

#: ../../../library/select.rst:58
msgid ""
"(Not supported by all operating systems.)  Returns a polling object, which "
"supports registering and unregistering file descriptors, and then polling "
"them for I/O events; see section :ref:`poll-objects` below for the methods "
"supported by polling objects."
msgstr ""

#: ../../../library/select.rst:66
msgid ""
"(Only supported on BSD.)  Returns a kernel queue object; see section :ref:"
"`kqueue-objects` below for the methods supported by kqueue objects."
msgstr ""

#: ../../../library/select.rst:72
msgid ""
"(Only supported on BSD.)  Returns a kernel event object; see section :ref:"
"`kevent-objects` below for the methods supported by kevent objects."
msgstr ""

#: ../../../library/select.rst:78
msgid ""
"This is a straightforward interface to the Unix :c:func:`select` system "
"call. The first three arguments are sequences of 'waitable objects': either "
"integers representing file descriptors or objects with a parameterless "
"method named :meth:`~io.IOBase.fileno` returning such an integer:"
msgstr ""

#: ../../../library/select.rst:83
msgid "*rlist*: wait until ready for reading"
msgstr ""

#: ../../../library/select.rst:84
msgid "*wlist*: wait until ready for writing"
msgstr ""

#: ../../../library/select.rst:85
msgid ""
"*xlist*: wait for an \"exceptional condition\" (see the manual page for what "
"your system considers such a condition)"
msgstr ""

#: ../../../library/select.rst:88
msgid ""
"Empty sequences are allowed, but acceptance of three empty sequences is "
"platform-dependent. (It is known to work on Unix but not on Windows.)  The "
"optional *timeout* argument specifies a time-out as a floating point number "
"in seconds.  When the *timeout* argument is omitted the function blocks "
"until at least one file descriptor is ready.  A time-out value of zero "
"specifies a poll and never blocks."
msgstr ""

#: ../../../library/select.rst:95
msgid ""
"The return value is a triple of lists of objects that are ready: subsets of "
"the first three arguments.  When the time-out is reached without a file "
"descriptor becoming ready, three empty lists are returned."
msgstr ""

#: ../../../library/select.rst:103
msgid ""
"Among the acceptable object types in the sequences are Python :term:`file "
"objects <file object>` (e.g. ``sys.stdin``, or objects returned by :func:"
"`open` or :func:`os.popen`), socket objects returned by :func:`socket."
"socket`.  You may also define a :dfn:`wrapper` class yourself, as long as it "
"has an appropriate :meth:`~io.IOBase.fileno` method (that really returns a "
"file descriptor, not just a random integer)."
msgstr ""

#: ../../../library/select.rst:114
msgid ""
"File objects on Windows are not acceptable, but sockets are.  On Windows, "
"the underlying :c:func:`select` function is provided by the WinSock library, "
"and does not handle file descriptors that don't originate from WinSock."
msgstr ""

#: ../../../library/select.rst:121
msgid ""
"The minimum number of bytes which can be written without blocking to a pipe "
"when the pipe has been reported as ready for writing by :func:`~select."
"select`, :func:`poll` or another interface in this module.  This doesn't "
"apply to other kind of file-like objects such as sockets."
msgstr ""

#: ../../../library/select.rst:126
msgid ""
"This value is guaranteed by POSIX to be at least 512.  Availability: Unix."
msgstr ""

#: ../../../library/select.rst:134
msgid "``/dev/poll`` Polling Objects"
msgstr ""

#: ../../../library/select.rst:136
msgid ""
"http://developers.sun.com/solaris/articles/using_devpoll.html http://"
"developers.sun.com/solaris/articles/polling_efficient.html"
msgstr ""

#: ../../../library/select.rst:139
msgid ""
"Solaris and derivatives have ``/dev/poll``. While :c:func:`select` is "
"O(highest file descriptor) and :c:func:`poll` is O(number of file "
"descriptors), ``/dev/poll`` is O(active file descriptors)."
msgstr ""

#: ../../../library/select.rst:143
msgid ""
"``/dev/poll`` behaviour is very close to the standard :c:func:`poll` object."
msgstr ""

#: ../../../library/select.rst:149 ../../../library/select.rst:290
msgid ""
"Register a file descriptor with the polling object.  Future calls to the :"
"meth:`poll` method will then check whether the file descriptor has any "
"pending I/O events.  *fd* can be either an integer, or an object with a :"
"meth:`~io.IOBase.fileno` method that returns an integer.  File objects "
"implement :meth:`!fileno`, so they can also be used as the argument."
msgstr ""

#: ../../../library/select.rst:155
msgid ""
"*eventmask* is an optional bitmask describing the type of events you want to "
"check for. The constants are the same that with :c:func:`poll` object. The "
"default value is a combination of the constants :const:`POLLIN`, :const:"
"`POLLPRI`, and :const:`POLLOUT`."
msgstr ""

#: ../../../library/select.rst:162
msgid ""
"Registering a file descriptor that's already registered is not an error, but "
"the result is undefined. The appropiate action is to unregister or modify it "
"first. This is an important difference compared with :c:func:`poll`."
msgstr ""

#: ../../../library/select.rst:170
msgid ""
"This method does an :meth:`unregister` followed by a :meth:`register`. It is "
"(a bit) more efficient that doing the same explicitly."
msgstr ""

#: ../../../library/select.rst:177 ../../../library/select.rst:331
msgid ""
"Remove a file descriptor being tracked by a polling object.  Just like the :"
"meth:`register` method, *fd* can be an integer or an object with a :meth:"
"`~io.IOBase.fileno` method that returns an integer."
msgstr ""

#: ../../../library/select.rst:181
msgid ""
"Attempting to remove a file descriptor that was never registered is safely "
"ignored."
msgstr ""

#: ../../../library/select.rst:187
msgid ""
"Polls the set of registered file descriptors, and returns a possibly-empty "
"list containing ``(fd, event)`` 2-tuples for the descriptors that have "
"events or errors to report. *fd* is the file descriptor, and *event* is a "
"bitmask with bits set for the reported events for that descriptor --- :const:"
"`POLLIN` for waiting input, :const:`POLLOUT` to indicate that the descriptor "
"can be written to, and so forth. An empty list indicates that the call timed "
"out and no file descriptors had any events to report. If *timeout* is given, "
"it specifies the length of time in milliseconds which the system will wait "
"for events before returning. If *timeout* is omitted, -1, or :const:`None`, "
"the call will block until there is an event for this poll object."
msgstr ""

#: ../../../library/select.rst:202
msgid "Edge and Level Trigger Polling (epoll) Objects"
msgstr ""

#: ../../../library/select.rst:204
msgid "http://linux.die.net/man/4/epoll"
msgstr ""

#: ../../../library/select.rst:206
msgid "*eventmask*"
msgstr ""

#: ../../../library/select.rst:209 ../../../library/select.rst:302
#: ../../../library/select.rst:401 ../../../library/select.rst:430
#: ../../../library/select.rst:461 ../../../library/select.rst:469
#: ../../../library/select.rst:489 ../../../library/select.rst:512
msgid "Constant"
msgstr ""

#: ../../../library/select.rst:209 ../../../library/select.rst:302
#: ../../../library/select.rst:401 ../../../library/select.rst:430
#: ../../../library/select.rst:461 ../../../library/select.rst:469
#: ../../../library/select.rst:489 ../../../library/select.rst:512
msgid "Meaning"
msgstr ""

#: ../../../library/select.rst:211
msgid ":const:`EPOLLIN`"
msgstr ""

#: ../../../library/select.rst:211
msgid "Available for read"
msgstr ""

#: ../../../library/select.rst:213
msgid ":const:`EPOLLOUT`"
msgstr ""

#: ../../../library/select.rst:213
msgid "Available for write"
msgstr ""

#: ../../../library/select.rst:215
msgid ":const:`EPOLLPRI`"
msgstr ""

#: ../../../library/select.rst:215
msgid "Urgent data for read"
msgstr ""

#: ../../../library/select.rst:217
msgid ":const:`EPOLLERR`"
msgstr ""

#: ../../../library/select.rst:217
msgid "Error condition happened on the assoc. fd"
msgstr ""

#: ../../../library/select.rst:219
msgid ":const:`EPOLLHUP`"
msgstr ""

#: ../../../library/select.rst:219
msgid "Hang up happened on the assoc. fd"
msgstr ""

#: ../../../library/select.rst:221
msgid ":const:`EPOLLET`"
msgstr ""

#: ../../../library/select.rst:221
msgid "Set Edge Trigger behavior, the default is Level Trigger behavior"
msgstr ""

#: ../../../library/select.rst:224
msgid ":const:`EPOLLONESHOT`"
msgstr ""

#: ../../../library/select.rst:224
msgid ""
"Set one-shot behavior. After one event is pulled out, the fd is internally "
"disabled"
msgstr ""

#: ../../../library/select.rst:227
msgid ":const:`EPOLLRDNORM`"
msgstr ""

#: ../../../library/select.rst:227
msgid "Equivalent to :const:`EPOLLIN`"
msgstr ""

#: ../../../library/select.rst:229
msgid ":const:`EPOLLRDBAND`"
msgstr ""

#: ../../../library/select.rst:229
msgid "Priority data band can be read."
msgstr ""

#: ../../../library/select.rst:231
msgid ":const:`EPOLLWRNORM`"
msgstr ""

#: ../../../library/select.rst:231
msgid "Equivalent to :const:`EPOLLOUT`"
msgstr ""

#: ../../../library/select.rst:233
msgid ":const:`EPOLLWRBAND`"
msgstr ""

#: ../../../library/select.rst:233
msgid "Priority data may be written."
msgstr ""

#: ../../../library/select.rst:235
msgid ":const:`EPOLLMSG`"
msgstr ""

#: ../../../library/select.rst:235
msgid "Ignored."
msgstr ""

#: ../../../library/select.rst:241
msgid "Close the control file descriptor of the epoll object."
msgstr ""

#: ../../../library/select.rst:246 ../../../library/select.rst:365
msgid "Return the file descriptor number of the control fd."
msgstr ""

#: ../../../library/select.rst:251
msgid "Create an epoll object from a given file descriptor."
msgstr ""

#: ../../../library/select.rst:256
msgid "Register a fd descriptor with the epoll object."
msgstr ""

#: ../../../library/select.rst:261
msgid "Modify a register file descriptor."
msgstr ""

#: ../../../library/select.rst:266
msgid "Remove a registered file descriptor from the epoll object."
msgstr ""

#: ../../../library/select.rst:271
msgid "Wait for events. timeout in seconds (float)"
msgstr ""

#: ../../../library/select.rst:277
msgid "Polling Objects"
msgstr ""

#: ../../../library/select.rst:279
msgid ""
"The :c:func:`poll` system call, supported on most Unix systems, provides "
"better scalability for network servers that service many, many clients at "
"the same time. :c:func:`poll` scales better because the system call only "
"requires listing the file descriptors of interest, while :c:func:`select` "
"builds a bitmap, turns on bits for the fds of interest, and then afterward "
"the whole bitmap has to be linearly scanned again. :c:func:`select` is "
"O(highest file descriptor), while :c:func:`poll` is O(number of file "
"descriptors)."
msgstr ""

#: ../../../library/select.rst:296
msgid ""
"*eventmask* is an optional bitmask describing the type of events you want to "
"check for, and can be a combination of the constants :const:`POLLIN`, :const:"
"`POLLPRI`, and :const:`POLLOUT`, described in the table below.  If not "
"specified, the default value used will check for all 3 types of events."
msgstr ""

#: ../../../library/select.rst:304
msgid ":const:`POLLIN`"
msgstr ""

#: ../../../library/select.rst:304
msgid "There is data to read"
msgstr ""

#: ../../../library/select.rst:306
msgid ":const:`POLLPRI`"
msgstr ""

#: ../../../library/select.rst:306
msgid "There is urgent data to read"
msgstr ""

#: ../../../library/select.rst:308
msgid ":const:`POLLOUT`"
msgstr ""

#: ../../../library/select.rst:308
msgid "Ready for output: writing will not block"
msgstr ""

#: ../../../library/select.rst:310
msgid ":const:`POLLERR`"
msgstr ""

#: ../../../library/select.rst:310
msgid "Error condition of some sort"
msgstr ""

#: ../../../library/select.rst:312
msgid ":const:`POLLHUP`"
msgstr ""

#: ../../../library/select.rst:312
msgid "Hung up"
msgstr ""

#: ../../../library/select.rst:314
msgid ":const:`POLLNVAL`"
msgstr ""

#: ../../../library/select.rst:314
msgid "Invalid request: descriptor not open"
msgstr ""

#: ../../../library/select.rst:317
msgid ""
"Registering a file descriptor that's already registered is not an error, and "
"has the same effect as registering the descriptor exactly once."
msgstr ""

#: ../../../library/select.rst:323
msgid ""
"Modifies an already registered fd. This has the same effect as "
"``register(fd, eventmask)``.  Attempting to modify a file descriptor that "
"was never registered causes an :exc:`IOError` exception with errno :const:"
"`ENOENT` to be raised."
msgstr ""

#: ../../../library/select.rst:335
msgid ""
"Attempting to remove a file descriptor that was never registered causes a :"
"exc:`KeyError` exception to be raised."
msgstr ""

#: ../../../library/select.rst:341
msgid ""
"Polls the set of registered file descriptors, and returns a possibly-empty "
"list containing ``(fd, event)`` 2-tuples for the descriptors that have "
"events or errors to report. *fd* is the file descriptor, and *event* is a "
"bitmask with bits set for the reported events for that descriptor --- :const:"
"`POLLIN` for waiting input, :const:`POLLOUT` to indicate that the descriptor "
"can be written to, and so forth. An empty list indicates that the call timed "
"out and no file descriptors had any events to report. If *timeout* is given, "
"it specifies the length of time in milliseconds which the system will wait "
"for events before returning. If *timeout* is omitted, negative, or :const:"
"`None`, the call will block until there is an event for this poll object."
msgstr ""

#: ../../../library/select.rst:356
msgid "Kqueue Objects"
msgstr ""

#: ../../../library/select.rst:360
msgid "Close the control file descriptor of the kqueue object."
msgstr ""

#: ../../../library/select.rst:370
msgid "Create a kqueue object from a given file descriptor."
msgstr ""

#: ../../../library/select.rst:375
msgid "Low level interface to kevent"
msgstr ""

#: ../../../library/select.rst:377
msgid "changelist must be an iterable of kevent object or None"
msgstr ""

#: ../../../library/select.rst:378
msgid "max_events must be 0 or a positive integer"
msgstr ""

#: ../../../library/select.rst:379
msgid "timeout in seconds (floats possible)"
msgstr ""

#: ../../../library/select.rst:385
msgid "Kevent Objects"
msgstr ""

#: ../../../library/select.rst:387
msgid "http://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2"
msgstr ""

#: ../../../library/select.rst:391
msgid ""
"Value used to identify the event. The interpretation depends on the filter "
"but it's usually the file descriptor. In the constructor ident can either be "
"an int or an object with a :meth:`~io.IOBase.fileno` method. kevent stores "
"the integer internally."
msgstr ""

#: ../../../library/select.rst:398
msgid "Name of the kernel filter."
msgstr ""

#: ../../../library/select.rst:403
msgid ":const:`KQ_FILTER_READ`"
msgstr ""

#: ../../../library/select.rst:403
msgid "Takes a descriptor and returns whenever there is data available to read"
msgstr ""

#: ../../../library/select.rst:406
msgid ":const:`KQ_FILTER_WRITE`"
msgstr ""

#: ../../../library/select.rst:406
msgid ""
"Takes a descriptor and returns whenever there is data available to write"
msgstr ""

#: ../../../library/select.rst:409
msgid ":const:`KQ_FILTER_AIO`"
msgstr ""

#: ../../../library/select.rst:409
msgid "AIO requests"
msgstr ""

#: ../../../library/select.rst:411
msgid ":const:`KQ_FILTER_VNODE`"
msgstr ""

#: ../../../library/select.rst:411
msgid ""
"Returns when one or more of the requested events watched in *fflag* occurs"
msgstr ""

#: ../../../library/select.rst:414
msgid ":const:`KQ_FILTER_PROC`"
msgstr ""

#: ../../../library/select.rst:414
msgid "Watch for events on a process id"
msgstr ""

#: ../../../library/select.rst:416
msgid ":const:`KQ_FILTER_NETDEV`"
msgstr ""

#: ../../../library/select.rst:416
msgid "Watch for events on a network device [not available on Mac OS X]"
msgstr ""

#: ../../../library/select.rst:419
msgid ":const:`KQ_FILTER_SIGNAL`"
msgstr ""

#: ../../../library/select.rst:419
msgid "Returns whenever the watched signal is delivered to the process"
msgstr ""

#: ../../../library/select.rst:422
msgid ":const:`KQ_FILTER_TIMER`"
msgstr ""

#: ../../../library/select.rst:422
msgid "Establishes an arbitrary timer"
msgstr ""

#: ../../../library/select.rst:427
msgid "Filter action."
msgstr ""

#: ../../../library/select.rst:432
msgid ":const:`KQ_EV_ADD`"
msgstr ""

#: ../../../library/select.rst:432
msgid "Adds or modifies an event"
msgstr ""

#: ../../../library/select.rst:434
msgid ":const:`KQ_EV_DELETE`"
msgstr ""

#: ../../../library/select.rst:434
msgid "Removes an event from the queue"
msgstr ""

#: ../../../library/select.rst:436
msgid ":const:`KQ_EV_ENABLE`"
msgstr ""

#: ../../../library/select.rst:436
msgid "Permitscontrol() to returns the event"
msgstr ""

#: ../../../library/select.rst:438
msgid ":const:`KQ_EV_DISABLE`"
msgstr ""

#: ../../../library/select.rst:438
msgid "Disablesevent"
msgstr ""

#: ../../../library/select.rst:440
msgid ":const:`KQ_EV_ONESHOT`"
msgstr ""

#: ../../../library/select.rst:440
msgid "Removes event after first occurrence"
msgstr ""

#: ../../../library/select.rst:442
msgid ":const:`KQ_EV_CLEAR`"
msgstr ""

#: ../../../library/select.rst:442
msgid "Reset the state after an event is retrieved"
msgstr ""

#: ../../../library/select.rst:444
msgid ":const:`KQ_EV_SYSFLAGS`"
msgstr ""

#: ../../../library/select.rst:444 ../../../library/select.rst:446
msgid "internal event"
msgstr ""

#: ../../../library/select.rst:446
msgid ":const:`KQ_EV_FLAG1`"
msgstr ""

#: ../../../library/select.rst:448
msgid ":const:`KQ_EV_EOF`"
msgstr ""

#: ../../../library/select.rst:448
msgid "Filter specific EOF condition"
msgstr ""

#: ../../../library/select.rst:450
msgid ":const:`KQ_EV_ERROR`"
msgstr ""

#: ../../../library/select.rst:450
msgid "See return values"
msgstr ""

#: ../../../library/select.rst:456
msgid "Filter specific flags."
msgstr ""

#: ../../../library/select.rst:458
msgid ":const:`KQ_FILTER_READ` and  :const:`KQ_FILTER_WRITE` filter flags:"
msgstr ""

#: ../../../library/select.rst:463
msgid ":const:`KQ_NOTE_LOWAT`"
msgstr ""

#: ../../../library/select.rst:463
msgid "low water mark of a socket buffer"
msgstr ""

#: ../../../library/select.rst:466
msgid ":const:`KQ_FILTER_VNODE` filter flags:"
msgstr ""

#: ../../../library/select.rst:471
msgid ":const:`KQ_NOTE_DELETE`"
msgstr ""

#: ../../../library/select.rst:471
msgid "*unlink()* was called"
msgstr ""

#: ../../../library/select.rst:473
msgid ":const:`KQ_NOTE_WRITE`"
msgstr ""

#: ../../../library/select.rst:473
msgid "a write occurred"
msgstr ""

#: ../../../library/select.rst:475
msgid ":const:`KQ_NOTE_EXTEND`"
msgstr ""

#: ../../../library/select.rst:475
msgid "the file was extended"
msgstr ""

#: ../../../library/select.rst:477
msgid ":const:`KQ_NOTE_ATTRIB`"
msgstr ""

#: ../../../library/select.rst:477
msgid "an attribute was changed"
msgstr ""

#: ../../../library/select.rst:479
msgid ":const:`KQ_NOTE_LINK`"
msgstr ""

#: ../../../library/select.rst:479
msgid "the link count has changed"
msgstr ""

#: ../../../library/select.rst:481
msgid ":const:`KQ_NOTE_RENAME`"
msgstr ""

#: ../../../library/select.rst:481
msgid "the file was renamed"
msgstr ""

#: ../../../library/select.rst:483
msgid ":const:`KQ_NOTE_REVOKE`"
msgstr ""

#: ../../../library/select.rst:483
msgid "access to the file was revoked"
msgstr ""

#: ../../../library/select.rst:486
msgid ":const:`KQ_FILTER_PROC` filter flags:"
msgstr ""

#: ../../../library/select.rst:491
msgid ":const:`KQ_NOTE_EXIT`"
msgstr ""

#: ../../../library/select.rst:491
msgid "the process has exited"
msgstr ""

#: ../../../library/select.rst:493
msgid ":const:`KQ_NOTE_FORK`"
msgstr ""

#: ../../../library/select.rst:493
msgid "the process has called *fork()*"
msgstr ""

#: ../../../library/select.rst:495
msgid ":const:`KQ_NOTE_EXEC`"
msgstr ""

#: ../../../library/select.rst:495
msgid "the process has executed a new process"
msgstr ""

#: ../../../library/select.rst:497
msgid ":const:`KQ_NOTE_PCTRLMASK`"
msgstr ""

#: ../../../library/select.rst:497 ../../../library/select.rst:499
msgid "internal filter flag"
msgstr ""

#: ../../../library/select.rst:499
msgid ":const:`KQ_NOTE_PDATAMASK`"
msgstr ""

#: ../../../library/select.rst:501
msgid ":const:`KQ_NOTE_TRACK`"
msgstr ""

#: ../../../library/select.rst:501
msgid "follow a process across *fork()*"
msgstr ""

#: ../../../library/select.rst:503
msgid ":const:`KQ_NOTE_CHILD`"
msgstr ""

#: ../../../library/select.rst:503
msgid "returned on the child process for *NOTE_TRACK*"
msgstr ""

#: ../../../library/select.rst:506
msgid ":const:`KQ_NOTE_TRACKERR`"
msgstr ""

#: ../../../library/select.rst:506
msgid "unable to attach to a child"
msgstr ""

#: ../../../library/select.rst:509
msgid ":const:`KQ_FILTER_NETDEV` filter flags (not available on Mac OS X):"
msgstr ""

#: ../../../library/select.rst:514
msgid ":const:`KQ_NOTE_LINKUP`"
msgstr ""

#: ../../../library/select.rst:514
msgid "link is up"
msgstr ""

#: ../../../library/select.rst:516
msgid ":const:`KQ_NOTE_LINKDOWN`"
msgstr ""

#: ../../../library/select.rst:516
msgid "link is down"
msgstr ""

#: ../../../library/select.rst:518
msgid ":const:`KQ_NOTE_LINKINV`"
msgstr ""

#: ../../../library/select.rst:518
msgid "link state is invalid"
msgstr ""

#: ../../../library/select.rst:524
msgid "Filter specific data."
msgstr ""

#: ../../../library/select.rst:529
msgid "User defined value."
msgstr ""

#: ../../../library/select.rst:99
msgid "socket() (in module socket)"
msgstr ""

#: ../../../library/select.rst:99
msgid "popen() (in module os)"
msgstr ""

#: ../../../library/select.rst:112
msgid "WinSock"
msgstr ""
