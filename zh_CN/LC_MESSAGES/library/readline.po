# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 04:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../library/readline.rst:3
msgid ":mod:`readline` --- GNU readline interface"
msgstr ""

#: ../../../library/readline.rst:11
msgid ""
"The :mod:`readline` module defines a number of functions to facilitate "
"completion and reading/writing of history files from the Python interpreter. "
"This module can be used directly or via the :mod:`rlcompleter` module.  "
"Settings made using  this module affect the behaviour of both the "
"interpreter's interactive prompt  and the prompts offered by the built-in :"
"func:`input` function."
msgstr ""

#: ../../../library/readline.rst:18
msgid "The :mod:`readline` module defines the following functions:"
msgstr ""

#: ../../../library/readline.rst:23
msgid "Parse and execute single line of a readline init file."
msgstr ""

#: ../../../library/readline.rst:28
msgid "Return the current contents of the line buffer."
msgstr ""

#: ../../../library/readline.rst:33
msgid "Insert text into the command line."
msgstr ""

#: ../../../library/readline.rst:38
msgid ""
"Parse a readline initialization file. The default filename is the last "
"filename used."
msgstr ""

#: ../../../library/readline.rst:44
msgid ""
"Load a readline history file. The default filename is :file:`~/.history`."
msgstr ""

#: ../../../library/readline.rst:49
msgid ""
"Save a readline history file. The default filename is :file:`~/.history`."
msgstr ""

#: ../../../library/readline.rst:54
msgid ""
"Clear the current history.  (Note: this function is not available if the "
"installed version of GNU readline doesn't support it.)"
msgstr ""

#: ../../../library/readline.rst:60
msgid ""
"Return the desired length of the history file.  Negative values imply "
"unlimited history file size."
msgstr ""

#: ../../../library/readline.rst:66
msgid ""
"Set the number of lines to save in the history file. :func:"
"`write_history_file` uses this value to truncate the history file when "
"saving.  Negative values imply unlimited history file size."
msgstr ""

#: ../../../library/readline.rst:73
msgid ""
"Return the number of lines currently in the history.  (This is different "
"from :func:`get_history_length`, which returns the maximum number of lines "
"that will be written to a history file.)"
msgstr ""

#: ../../../library/readline.rst:80
msgid "Return the current contents of history item at *index*."
msgstr ""

#: ../../../library/readline.rst:85
msgid "Remove history item specified by its position from the history."
msgstr ""

#: ../../../library/readline.rst:90
msgid "Replace history item specified by its position with the given line."
msgstr ""

#: ../../../library/readline.rst:95
msgid ""
"Change what's displayed on the screen to reflect the current contents of the "
"line buffer."
msgstr ""

#: ../../../library/readline.rst:101
msgid ""
"Set or remove the startup_hook function.  If *function* is specified, it "
"will be used as the new startup_hook function; if omitted or ``None``, any "
"hook function already installed is removed.  The startup_hook function is "
"called with no arguments just before readline prints the first prompt."
msgstr ""

#: ../../../library/readline.rst:109
msgid ""
"Set or remove the pre_input_hook function.  If *function* is specified, it "
"will be used as the new pre_input_hook function; if omitted or ``None``, any "
"hook function already installed is removed.  The pre_input_hook function is "
"called with no arguments after the first prompt has been printed and just "
"before readline starts reading input characters."
msgstr ""

#: ../../../library/readline.rst:118
msgid ""
"Set or remove the completer function.  If *function* is specified, it will "
"be used as the new completer function; if omitted or ``None``, any completer "
"function already installed is removed.  The completer function is called as "
"``function(text, state)``, for *state* in ``0``, ``1``, ``2``, ..., until it "
"returns a non-string value.  It should return the next possible completion "
"starting with *text*."
msgstr ""

#: ../../../library/readline.rst:128
msgid ""
"Get the completer function, or ``None`` if no completer function has been "
"set."
msgstr ""

#: ../../../library/readline.rst:133
msgid "Get the type of completion being attempted."
msgstr ""

#: ../../../library/readline.rst:138
msgid "Get the beginning index of the readline tab-completion scope."
msgstr ""

#: ../../../library/readline.rst:143
msgid "Get the ending index of the readline tab-completion scope."
msgstr ""

#: ../../../library/readline.rst:148
msgid "Set the readline word delimiters for tab-completion."
msgstr ""

#: ../../../library/readline.rst:153
msgid "Get the readline word delimiters for tab-completion."
msgstr ""

#: ../../../library/readline.rst:158
msgid ""
"Set or remove the completion display function.  If *function* is specified, "
"it will be used as the new completion display function; if omitted or "
"``None``, any completion display function already installed is removed.  The "
"completion display function is called as ``function(substitution, [matches], "
"longest_match_length)`` once each time matches need to be displayed."
msgstr ""

#: ../../../library/readline.rst:168
msgid "Append a line to the history buffer, as if it was the last line typed."
msgstr ""

#: ../../../library/readline.rst:173
msgid "Module :mod:`rlcompleter`"
msgstr ""

#: ../../../library/readline.rst:174
msgid "Completion of Python identifiers at the interactive prompt."
msgstr ""

#: ../../../library/readline.rst:180
msgid "Example"
msgstr ""

#: ../../../library/readline.rst:182
msgid ""
"The following example demonstrates how to use the :mod:`readline` module's "
"history reading and writing functions to automatically load and save a "
"history file named :file:`.pyhist` from the user's home directory.  The code "
"below would normally be executed automatically during interactive sessions "
"from the user's :envvar:`PYTHONSTARTUP` file. ::"
msgstr ""

#: ../../../library/readline.rst:198
msgid ""
"The following example extends the :class:`code.InteractiveConsole` class to "
"support history save/restore. ::"
msgstr ""
